<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="0" total="20" passed="17" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-24T11:19:31 EEST" name="WPT" finished-at="2023-08-24T11:21:20 EEST" duration-ms="108976">
    <groups>
    </groups>
    <test started-at="2023-08-24T11:19:31 EEST" name="ai-mood - Pixel perfect regression" finished-at="2023-08-24T11:21:20 EEST" duration-ms="108976">
      <class name="tests.buySellMoodCoinTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:30 EEST" name="setUp" finished-at="2023-08-24T11:20:33 EEST" duration-ms="2472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:33 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:20:42 EEST" duration-ms="8954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:42 EEST" name="setUp" finished-at="2023-08-24T11:20:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:42 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:20:46 EEST" duration-ms="4116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:46 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:20:50 EEST" duration-ms="4126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:46 EEST" name="setUp" finished-at="2023-08-24T11:20:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:50 EEST" name="setUp" finished-at="2023-08-24T11:20:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:50 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:20:54 EEST" duration-ms="4178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:54 EEST" name="setUp" finished-at="2023-08-24T11:20:54 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:20:54 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-08-24T11:21:00 EEST" duration-ms="5971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:00 EEST" name="setUp" finished-at="2023-08-24T11:21:00 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:00 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:21:05 EEST" duration-ms="5020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:05 EEST" name="setUp" finished-at="2023-08-24T11:21:05 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:8, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:05 EEST" name="partnFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:21:10 EEST" duration-ms="4900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:10 EEST" name="setUp" finished-at="2023-08-24T11:21:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:10 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:21:15 EEST" duration-ms="4959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:15 EEST" name="setUp" finished-at="2023-08-24T11:21:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:15 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:21:19 EEST" duration-ms="4020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@d5b810e]" started-at="2023-08-24T11:21:19 EEST" name="tearDown" finished-at="2023-08-24T11:21:20 EEST" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageFirefoxTests -->
      <class name="tests.buySellMoodCoinTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:32 EEST" name="setUp" finished-at="2023-08-24T11:19:34 EEST" duration-ms="2159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:34 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:19:41 EEST" duration-ms="7488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:41 EEST" name="setUp" finished-at="2023-08-24T11:19:41 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:41 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:19:46 EEST" duration-ms="4438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:46 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:19:50 EEST" duration-ms="4354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:46 EEST" name="setUp" finished-at="2023-08-24T11:19:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:50 EEST" name="setUp" finished-at="2023-08-24T11:19:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:50 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-24T11:19:54 EEST" duration-ms="4382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:54 EEST" name="setUp" finished-at="2023-08-24T11:19:54 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:19:54 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-08-24T11:20:01 EEST" duration-ms="6381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:01 EEST" name="setUp" finished-at="2023-08-24T11:20:01 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:01 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:06 EEST" duration-ms="5365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:06 EEST" name="setUp" finished-at="2023-08-24T11:20:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:8, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:06 EEST" name="partnFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:11 EEST" duration-ms="5190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:11 EEST" name="setUp" finished-at="2023-08-24T11:20:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:11 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:16 EEST" duration-ms="4716" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.subFooterBuySellMoodCoinPage(AllPageChromeTests.java:177)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method retried="true" signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:16 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:21 EEST" duration-ms="4669" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.subFooterBuySellMoodCoinPage(AllPageChromeTests.java:177)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:16 EEST" name="setUp" finished-at="2023-08-24T11:20:16 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:21 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:25 EEST" duration-ms="4668" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.subFooterBuySellMoodCoinPage(AllPageChromeTests.java:177)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:21 EEST" name="setUp" finished-at="2023-08-24T11:20:21 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:25 EEST" name="setUp" finished-at="2023-08-24T11:20:25 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:25 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-24T11:20:30 EEST" duration-ms="4246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@53fdffa1]" started-at="2023-08-24T11:20:30 EEST" name="tearDown" finished-at="2023-08-24T11:20:30 EEST" duration-ms="691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageChromeTests -->
    </test> <!-- ai-mood - Pixel perfect regression -->
  </suite> <!-- WPT -->
</testng-results>
