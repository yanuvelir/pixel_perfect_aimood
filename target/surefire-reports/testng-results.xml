<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="15" ignored="15" total="228" passed="193" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-12T23:25:56 EEST" name="WPT" finished-at="2023-09-12T23:55:07 EEST" duration-ms="1750686">
    <groups>
    </groups>
    <test started-at="2023-09-12T23:25:56 EEST" name="ai-mood - Pixel perfect regression" finished-at="2023-09-12T23:55:07 EEST" duration-ms="1750686">
      <class name="tests.marketPlacePageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:35 EEST" name="setUp" finished-at="2023-09-12T23:28:37 EEST" duration-ms="2378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:1, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:37 EEST" name="allHeaderMarketPlacePage" finished-at="2023-09-12T23:28:48 EEST" duration-ms="10421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMarketPlacePage -->
        <test-method signature="getStartedHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:2, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:48 EEST" name="getStartedHeaderMarketPlacePage" finished-at="2023-09-12T23:28:54 EEST" duration-ms="6001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:48 EEST" name="setUp" finished-at="2023-09-12T23:28:48 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:54 EEST" name="setUp" finished-at="2023-09-12T23:28:54 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:3, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:28:54 EEST" name="learnHeaderMarketPlacePage" finished-at="2023-09-12T23:29:00 EEST" duration-ms="6023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:00 EEST" name="setUp" finished-at="2023-09-12T23:29:00 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:4, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:00 EEST" name="resourcesHeaderMarketPlacePage" finished-at="2023-09-12T23:29:06 EEST" duration-ms="6072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMarketPlacePage -->
        <test-method signature="mainSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:6, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:06 EEST" name="mainSectionMarketPlacePage" finished-at="2023-09-12T23:29:13 EEST" duration-ms="6973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:06 EEST" name="setUp" finished-at="2023-09-12T23:29:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:13 EEST" name="setUp" finished-at="2023-09-12T23:29:13 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:7, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:13 EEST" name="statisticsSectionMarketPlacePage" finished-at="2023-09-12T23:29:19 EEST" duration-ms="6318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:19 EEST" name="setUp" finished-at="2023-09-12T23:29:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:8, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:19 EEST" name="allFooterMarketPlacePage" finished-at="2023-09-12T23:29:25 EEST" duration-ms="5966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMarketPlacePage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@8462f31]" started-at="2023-09-12T23:29:25 EEST" name="tearDown" finished-at="2023-09-12T23:29:27 EEST" duration-ms="1601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.marketPlacePageTests.AllPageFirefoxTests -->
      <class name="tests.resetPasswordPage2Tests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:20 EEST" name="setUp" finished-at="2023-09-12T23:50:22 EEST" duration-ms="2439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:1, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:22 EEST" name="allHeaderResetPasswordPage2" finished-at="2023-09-12T23:50:31 EEST" duration-ms="8691" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderResetPasswordPage2 -->
        <test-method signature="getStartedHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:2, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:31 EEST" name="getStartedHeaderResetPasswordPage2" finished-at="2023-09-12T23:50:36 EEST" duration-ms="5150" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:31 EEST" name="setUp" finished-at="2023-09-12T23:50:31 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:3, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:36 EEST" name="learnHeaderResetPasswordPage2" finished-at="2023-09-12T23:50:41 EEST" duration-ms="5103" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:36 EEST" name="setUp" finished-at="2023-09-12T23:50:36 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:4, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:41 EEST" name="resourcesHeaderResetPasswordPage2" finished-at="2023-09-12T23:50:46 EEST" duration-ms="5189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:41 EEST" name="setUp" finished-at="2023-09-12T23:50:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionResetPasswordPage2(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:46 EEST" name="mainSectionResetPasswordPage2" finished-at="2023-09-12T23:50:53 EEST" duration-ms="6641" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPage2Tests.AllPageFirefoxTests.mainSectionResetPasswordPage2(AllPageFirefoxTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:46 EEST" name="setUp" finished-at="2023-09-12T23:50:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionResetPasswordPage2(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:53 EEST" name="mainSectionResetPasswordPage2" finished-at="2023-09-12T23:50:59 EEST" duration-ms="6689" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPage2Tests.AllPageFirefoxTests.mainSectionResetPasswordPage2(AllPageFirefoxTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:53 EEST" name="setUp" finished-at="2023-09-12T23:50:53 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionResetPasswordPage2(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:59 EEST" name="mainSectionResetPasswordPage2" finished-at="2023-09-12T23:51:06 EEST" duration-ms="6719" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPage2Tests.AllPageFirefoxTests.mainSectionResetPasswordPage2(AllPageFirefoxTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:50:59 EEST" name="setUp" finished-at="2023-09-12T23:50:59 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterResetPasswordPage2(java.lang.String,java.lang.String)[pri:7, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:51:06 EEST" name="allFooterResetPasswordPage2" finished-at="2023-09-12T23:51:12 EEST" duration-ms="5955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:51:06 EEST" name="setUp" finished-at="2023-09-12T23:51:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageFirefoxTests@6d60fe40]" started-at="2023-09-12T23:51:12 EEST" name="tearDown" finished-at="2023-09-12T23:51:14 EEST" duration-ms="1579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.resetPasswordPage2Tests.AllPageFirefoxTests -->
      <class name="tests.signInPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:41 EEST" name="setUp" finished-at="2023-09-12T23:52:41 EEST" duration-ms="783" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderSignInPage(java.lang.String,java.lang.String)[pri:1, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:41 EEST" name="allHeaderSignInPage" finished-at="2023-09-12T23:52:50 EEST" duration-ms="8286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:50 EEST" name="setUp" finished-at="2023-09-12T23:52:50 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderSignInPage(java.lang.String,java.lang.String)[pri:2, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:50 EEST" name="getStartedHeaderSignInPage" finished-at="2023-09-12T23:52:55 EEST" duration-ms="5332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:55 EEST" name="setUp" finished-at="2023-09-12T23:52:55 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderSignInPage(java.lang.String,java.lang.String)[pri:3, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:52:55 EEST" name="learnHeaderSignInPage" finished-at="2023-09-12T23:53:00 EEST" duration-ms="5311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderSignInPage -->
        <test-method signature="resourcesHeaderSignInPage(java.lang.String,java.lang.String)[pri:4, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:00 EEST" name="resourcesHeaderSignInPage" finished-at="2023-09-12T23:53:06 EEST" duration-ms="5328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:00 EEST" name="setUp" finished-at="2023-09-12T23:53:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionSignInPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:06 EEST" name="mainSectionSignInPage" finished-at="2023-09-12T23:53:12 EEST" duration-ms="6845" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.signInPageTests.AllPageChromeTests.mainSectionSignInPage(AllPageChromeTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:06 EEST" name="setUp" finished-at="2023-09-12T23:53:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionSignInPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:12 EEST" name="mainSectionSignInPage" finished-at="2023-09-12T23:53:20 EEST" duration-ms="7228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:12 EEST" name="setUp" finished-at="2023-09-12T23:53:12 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:20 EEST" name="setUp" finished-at="2023-09-12T23:53:20 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterSignInPage(java.lang.String,java.lang.String)[pri:7, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:20 EEST" name="allFooterSignInPage" finished-at="2023-09-12T23:53:26 EEST" duration-ms="6228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterSignInPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.signInPageTests.AllPageChromeTests@19932c16]" started-at="2023-09-12T23:53:26 EEST" name="tearDown" finished-at="2023-09-12T23:53:27 EEST" duration-ms="640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.signInPageTests.AllPageChromeTests -->
      <class name="tests.walletPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:01 EEST" name="setUp" finished-at="2023-09-12T23:41:03 EEST" duration-ms="2643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWalletPage(java.lang.String,java.lang.String)[pri:1, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:03 EEST" name="allHeaderWalletPage" finished-at="2023-09-12T23:41:14 EEST" duration-ms="10180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWalletPage -->
        <test-method signature="getStartedHeaderWalletPage(java.lang.String,java.lang.String)[pri:2, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:14 EEST" name="getStartedHeaderWalletPage" finished-at="2023-09-12T23:41:19 EEST" duration-ms="5111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:14 EEST" name="setUp" finished-at="2023-09-12T23:41:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWalletPage(java.lang.String,java.lang.String)[pri:3, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:19 EEST" name="learnHeaderWalletPage" finished-at="2023-09-12T23:41:24 EEST" duration-ms="5095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:19 EEST" name="setUp" finished-at="2023-09-12T23:41:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:24 EEST" name="setUp" finished-at="2023-09-12T23:41:24 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderWalletPage(java.lang.String,java.lang.String)[pri:4, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:24 EEST" name="resourcesHeaderWalletPage" finished-at="2023-09-12T23:41:29 EEST" duration-ms="5155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWalletPage -->
        <test-method signature="mainSectionWalletPage(java.lang.String,java.lang.String)[pri:6, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:29 EEST" name="mainSectionWalletPage" finished-at="2023-09-12T23:41:35 EEST" duration-ms="5961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:29 EEST" name="setUp" finished-at="2023-09-12T23:41:29 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:35 EEST" name="setUp" finished-at="2023-09-12T23:41:35 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="delegatedSectionWalletPage(java.lang.String,java.lang.String)[pri:7, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:35 EEST" name="delegatedSectionWalletPage" finished-at="2023-09-12T23:41:41 EEST" duration-ms="6204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegatedSectionWalletPage -->
        <test-method signature="allFooterWalletPage(java.lang.String,java.lang.String)[pri:8, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:41 EEST" name="allFooterWalletPage" finished-at="2023-09-12T23:41:47 EEST" duration-ms="5987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:41 EEST" name="setUp" finished-at="2023-09-12T23:41:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.walletPageTests.AllPageFirefoxTests@1033576a]" started-at="2023-09-12T23:41:47 EEST" name="tearDown" finished-at="2023-09-12T23:41:49 EEST" duration-ms="1664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.walletPageTests.AllPageFirefoxTests -->
      <class name="tests.resetPasswordPage2Tests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:14 EEST" name="setUp" finished-at="2023-09-12T23:51:15 EEST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:1, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:15 EEST" name="allHeaderResetPasswordPage2" finished-at="2023-09-12T23:51:23 EEST" duration-ms="8323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderResetPasswordPage2 -->
        <test-method signature="getStartedHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:2, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:23 EEST" name="getStartedHeaderResetPasswordPage2" finished-at="2023-09-12T23:51:28 EEST" duration-ms="5356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:23 EEST" name="setUp" finished-at="2023-09-12T23:51:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:3, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:28 EEST" name="learnHeaderResetPasswordPage2" finished-at="2023-09-12T23:51:34 EEST" duration-ms="5318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:28 EEST" name="setUp" finished-at="2023-09-12T23:51:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:34 EEST" name="setUp" finished-at="2023-09-12T23:51:34 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderResetPasswordPage2(java.lang.String,java.lang.String)[pri:4, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:34 EEST" name="resourcesHeaderResetPasswordPage2" finished-at="2023-09-12T23:51:39 EEST" duration-ms="5291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderResetPasswordPage2 -->
        <test-method retried="true" signature="mainSectionResetPasswordPage2(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:39 EEST" name="mainSectionResetPasswordPage2" finished-at="2023-09-12T23:51:46 EEST" duration-ms="6876" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPage2Tests.AllPageChromeTests.mainSectionResetPasswordPage2(AllPageChromeTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:39 EEST" name="setUp" finished-at="2023-09-12T23:51:39 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionResetPasswordPage2(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:46 EEST" name="mainSectionResetPasswordPage2" finished-at="2023-09-12T23:51:53 EEST" duration-ms="7219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:46 EEST" name="setUp" finished-at="2023-09-12T23:51:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterResetPasswordPage2(java.lang.String,java.lang.String)[pri:7, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:53 EEST" name="allFooterResetPasswordPage2" finished-at="2023-09-12T23:51:59 EEST" duration-ms="6240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterResetPasswordPage2 -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:53 EEST" name="setUp" finished-at="2023-09-12T23:51:53 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.resetPasswordPage2Tests.AllPageChromeTests@792b749c]" started-at="2023-09-12T23:51:59 EEST" name="tearDown" finished-at="2023-09-12T23:52:00 EEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.resetPasswordPage2Tests.AllPageChromeTests -->
      <class name="tests.walletPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:41:49 EEST" name="setUp" finished-at="2023-09-12T23:41:50 EEST" duration-ms="796" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWalletPage(java.lang.String,java.lang.String)[pri:1, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:41:50 EEST" name="allHeaderWalletPage" finished-at="2023-09-12T23:41:57 EEST" duration-ms="7586" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWalletPage -->
        <test-method signature="getStartedHeaderWalletPage(java.lang.String,java.lang.String)[pri:2, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:41:57 EEST" name="getStartedHeaderWalletPage" finished-at="2023-09-12T23:42:03 EEST" duration-ms="5353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:41:57 EEST" name="setUp" finished-at="2023-09-12T23:41:57 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:03 EEST" name="setUp" finished-at="2023-09-12T23:42:03 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWalletPage(java.lang.String,java.lang.String)[pri:3, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:03 EEST" name="learnHeaderWalletPage" finished-at="2023-09-12T23:42:08 EEST" duration-ms="5299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWalletPage -->
        <test-method signature="resourcesHeaderWalletPage(java.lang.String,java.lang.String)[pri:4, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:08 EEST" name="resourcesHeaderWalletPage" finished-at="2023-09-12T23:42:13 EEST" duration-ms="5262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:08 EEST" name="setUp" finished-at="2023-09-12T23:42:08 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionWalletPage(java.lang.String,java.lang.String)[pri:6, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:13 EEST" name="mainSectionWalletPage" finished-at="2023-09-12T23:42:19 EEST" duration-ms="6248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:13 EEST" name="setUp" finished-at="2023-09-12T23:42:13 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:19 EEST" name="setUp" finished-at="2023-09-12T23:42:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="delegatedSectionWalletPage(java.lang.String,java.lang.String)[pri:7, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:19 EEST" name="delegatedSectionWalletPage" finished-at="2023-09-12T23:42:26 EEST" duration-ms="6566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegatedSectionWalletPage -->
        <test-method signature="allFooterWalletPage(java.lang.String,java.lang.String)[pri:8, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:26 EEST" name="allFooterWalletPage" finished-at="2023-09-12T23:42:32 EEST" duration-ms="6250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/the-aimood-wallet]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWalletPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:26 EEST" name="setUp" finished-at="2023-09-12T23:42:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.walletPageTests.AllPageChromeTests@303cf2ba]" started-at="2023-09-12T23:42:32 EEST" name="tearDown" finished-at="2023-09-12T23:42:33 EEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.walletPageTests.AllPageChromeTests -->
      <class name="tests.WhatIsAimood.WhatIsAimoodChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:00 EEST" name="setUp" finished-at="2023-09-12T23:47:00 EEST" duration-ms="812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:00 EEST" name="allHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:47:10 EEST" duration-ms="9515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWhatIsAimoodPage -->
        <test-method signature="getStartedHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:10 EEST" name="getStartedHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:47:15 EEST" duration-ms="5374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:10 EEST" name="setUp" finished-at="2023-09-12T23:47:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:15 EEST" name="learnHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:47:21 EEST" duration-ms="5338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:15 EEST" name="setUp" finished-at="2023-09-12T23:47:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:21 EEST" name="resourcesHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:47:26 EEST" duration-ms="5322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:21 EEST" name="setUp" finished-at="2023-09-12T23:47:21 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:26 EEST" name="setUp" finished-at="2023-09-12T23:47:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainBlockWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:26 EEST" name="mainBlockWhatIsAimoodPage" finished-at="2023-09-12T23:47:32 EEST" duration-ms="6238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBlockWhatIsAimoodPage -->
        <test-method signature="whyChooseWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:32 EEST" name="whyChooseWhatIsAimoodPage" finished-at="2023-09-12T23:47:39 EEST" duration-ms="6564" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whyChooseWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:32 EEST" name="setUp" finished-at="2023-09-12T23:47:32 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ecosystemWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:39 EEST" name="ecosystemWhatIsAimoodPage" finished-at="2023-09-12T23:47:45 EEST" duration-ms="6655" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ecosystemWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:39 EEST" name="setUp" finished-at="2023-09-12T23:47:39 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:9, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:45 EEST" name="allFooterWhatIsAimoodPage" finished-at="2023-09-12T23:47:52 EEST" duration-ms="6270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:45 EEST" name="setUp" finished-at="2023-09-12T23:47:45 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodChromeTests@2b30a42c]" started-at="2023-09-12T23:47:52 EEST" name="tearDown" finished-at="2023-09-12T23:47:52 EEST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WhatIsAimood.WhatIsAimoodChromeTests -->
      <class name="tests.tokenMoodPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:22 EEST" name="setUp" finished-at="2023-09-12T23:32:23 EEST" duration-ms="768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:23 EEST" name="allHeaderTokenMoodPage" finished-at="2023-09-12T23:32:31 EEST" duration-ms="8144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderTokenMoodPage -->
        <test-method signature="getStartedHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:31 EEST" name="getStartedHeaderTokenMoodPage" finished-at="2023-09-12T23:32:37 EEST" duration-ms="5382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:31 EEST" name="setUp" finished-at="2023-09-12T23:32:31 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:37 EEST" name="learnHeaderTokenMoodPage" finished-at="2023-09-12T23:32:42 EEST" duration-ms="5274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:37 EEST" name="setUp" finished-at="2023-09-12T23:32:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:42 EEST" name="setUp" finished-at="2023-09-12T23:32:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:42 EEST" name="resourcesHeaderTokenMoodPage" finished-at="2023-09-12T23:32:47 EEST" duration-ms="5312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:47 EEST" name="setUp" finished-at="2023-09-12T23:32:47 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:47 EEST" name="mainSectionTokenMoodPage" finished-at="2023-09-12T23:32:54 EEST" duration-ms="7218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:54 EEST" name="setUp" finished-at="2023-09-12T23:32:54 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:32:54 EEST" name="statisticsSectionTokenMoodPage" finished-at="2023-09-12T23:33:02 EEST" duration-ms="7755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionTokenMoodPage -->
        <test-method signature="allFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:33:02 EEST" name="allFooterTokenMoodPage" finished-at="2023-09-12T23:33:08 EEST" duration-ms="6249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:33:02 EEST" name="setUp" finished-at="2023-09-12T23:33:02 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@59402b8f]" started-at="2023-09-12T23:33:08 EEST" name="tearDown" finished-at="2023-09-12T23:33:09 EEST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.tokenMoodPageTests.AllPageChromeTests -->
      <class name="tests.signUpPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:27 EEST" name="setUp" finished-at="2023-09-12T23:53:29 EEST" duration-ms="2402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderSignUpPage(java.lang.String,java.lang.String)[pri:1, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:29 EEST" name="allHeaderSignUpPage" finished-at="2023-09-12T23:53:38 EEST" duration-ms="8749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:38 EEST" name="setUp" finished-at="2023-09-12T23:53:38 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderSignUpPage(java.lang.String,java.lang.String)[pri:2, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:38 EEST" name="getStartedHeaderSignUpPage" finished-at="2023-09-12T23:53:43 EEST" duration-ms="5112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderSignUpPage -->
        <test-method signature="learnHeaderSignUpPage(java.lang.String,java.lang.String)[pri:3, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:43 EEST" name="learnHeaderSignUpPage" finished-at="2023-09-12T23:53:48 EEST" duration-ms="5085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:43 EEST" name="setUp" finished-at="2023-09-12T23:53:43 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderSignUpPage(java.lang.String,java.lang.String)[pri:4, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:48 EEST" name="resourcesHeaderSignUpPage" finished-at="2023-09-12T23:53:53 EEST" duration-ms="5165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:48 EEST" name="setUp" finished-at="2023-09-12T23:53:48 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionSignUpPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:53 EEST" name="mainSectionSignUpPage" finished-at="2023-09-12T23:54:00 EEST" duration-ms="6653" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.signUpPageTests.AllPageFirefoxTests.mainSectionSignUpPage(AllPageFirefoxTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:53:53 EEST" name="setUp" finished-at="2023-09-12T23:53:53 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionSignUpPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:54:00 EEST" name="mainSectionSignUpPage" finished-at="2023-09-12T23:54:07 EEST" duration-ms="7044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:54:00 EEST" name="setUp" finished-at="2023-09-12T23:54:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:54:07 EEST" name="setUp" finished-at="2023-09-12T23:54:07 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterSignUpPage(java.lang.String,java.lang.String)[pri:7, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:54:07 EEST" name="allFooterSignUpPage" finished-at="2023-09-12T23:54:13 EEST" duration-ms="5983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterSignUpPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.signUpPageTests.AllPageFirefoxTests@73eb439a]" started-at="2023-09-12T23:54:13 EEST" name="tearDown" finished-at="2023-09-12T23:54:14 EEST" duration-ms="1675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.signUpPageTests.AllPageFirefoxTests -->
      <class name="tests.mainPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:25:56 EEST" name="setUp" finished-at="2023-09-12T23:26:01 EEST" duration-ms="4202" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMainPage(java.lang.String,java.lang.String)[pri:1, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:01 EEST" name="allHeaderMainPage" finished-at="2023-09-12T23:26:12 EEST" duration-ms="11549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:12 EEST" name="setUp" finished-at="2023-09-12T23:26:12 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderMainPage(java.lang.String,java.lang.String)[pri:2, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:12 EEST" name="getStartedHeaderMainPage" finished-at="2023-09-12T23:26:17 EEST" duration-ms="5265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMainPage -->
        <test-method signature="learnHeaderMainPage(java.lang.String,java.lang.String)[pri:3, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:17 EEST" name="learnHeaderMainPage" finished-at="2023-09-12T23:26:23 EEST" duration-ms="5159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:17 EEST" name="setUp" finished-at="2023-09-12T23:26:17 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMainPage(java.lang.String,java.lang.String)[pri:4, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:23 EEST" name="resourcesHeaderMainPage" finished-at="2023-09-12T23:26:28 EEST" duration-ms="5552" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:23 EEST" name="setUp" finished-at="2023-09-12T23:26:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMainPage(java.lang.String,java.lang.String)[pri:6, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:28 EEST" name="mainSectionMainPage" finished-at="2023-09-12T23:26:34 EEST" duration-ms="6095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:28 EEST" name="setUp" finished-at="2023-09-12T23:26:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="videoSectionMainPage(java.lang.String,java.lang.String)[pri:7, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:34 EEST" name="videoSectionMainPage" finished-at="2023-09-12T23:26:41 EEST" duration-ms="6445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- videoSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:34 EEST" name="setUp" finished-at="2023-09-12T23:26:34 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="roadmapSectionMainPage(java.lang.String,java.lang.String)[pri:8, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:41 EEST" name="roadmapSectionMainPage" finished-at="2023-09-12T23:26:47 EEST" duration-ms="6564" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roadmapSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:41 EEST" name="setUp" finished-at="2023-09-12T23:26:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMainPage(java.lang.String,java.lang.String)[pri:9, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:47 EEST" name="statisticsSectionMainPage" finished-at="2023-09-12T23:26:54 EEST" duration-ms="6379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:47 EEST" name="setUp" finished-at="2023-09-12T23:26:47 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="leaningSectionMainPage(java.lang.String,java.lang.String)[pri:10, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:54 EEST" name="leaningSectionMainPage" finished-at="2023-09-12T23:27:00 EEST" duration-ms="6660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leaningSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:26:54 EEST" name="setUp" finished-at="2023-09-12T23:26:54 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:27:00 EEST" name="setUp" finished-at="2023-09-12T23:27:00 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMainPage(java.lang.String,java.lang.String)[pri:11, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:27:00 EEST" name="allFooterMainPage" finished-at="2023-09-12T23:27:06 EEST" duration-ms="5976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMainPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@74e28667]" started-at="2023-09-12T23:27:06 EEST" name="tearDown" finished-at="2023-09-12T23:27:08 EEST" duration-ms="1628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.mainPageTests.AllPageFirefoxTests -->
      <class name="tests.resetPasswordPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:48:46 EEST" name="setUp" finished-at="2023-09-12T23:48:48 EEST" duration-ms="2574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:1, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:48:48 EEST" name="allHeaderResetPasswordPage" finished-at="2023-09-12T23:48:57 EEST" duration-ms="8758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:48:57 EEST" name="setUp" finished-at="2023-09-12T23:48:57 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:2, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:48:57 EEST" name="getStartedHeaderResetPasswordPage" finished-at="2023-09-12T23:49:02 EEST" duration-ms="5126" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderResetPasswordPage -->
        <test-method signature="learnHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:3, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:02 EEST" name="learnHeaderResetPasswordPage" finished-at="2023-09-12T23:49:07 EEST" duration-ms="5105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:02 EEST" name="setUp" finished-at="2023-09-12T23:49:02 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:07 EEST" name="setUp" finished-at="2023-09-12T23:49:07 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:4, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:07 EEST" name="resourcesHeaderResetPasswordPage" finished-at="2023-09-12T23:49:13 EEST" duration-ms="5137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderResetPasswordPage -->
        <test-method signature="mainSectionResetPasswordPage(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:13 EEST" name="mainSectionResetPasswordPage" finished-at="2023-09-12T23:49:19 EEST" duration-ms="6954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:13 EEST" name="setUp" finished-at="2023-09-12T23:49:13 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:19 EEST" name="setUp" finished-at="2023-09-12T23:49:19 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterResetPasswordPage(java.lang.String,java.lang.String)[pri:7, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:19 EEST" name="allFooterResetPasswordPage" finished-at="2023-09-12T23:49:26 EEST" duration-ms="6022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterResetPasswordPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.resetPasswordPageTests.AllPageFirefoxTests@359df09a]" started-at="2023-09-12T23:49:26 EEST" name="tearDown" finished-at="2023-09-12T23:49:27 EEST" duration-ms="1505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.resetPasswordPageTests.AllPageFirefoxTests -->
      <class name="tests.WhatIsAimood.WhatIsAimoodFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:47:52 EEST" name="setUp" finished-at="2023-09-12T23:47:55 EEST" duration-ms="2379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:47:55 EEST" name="allHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:48:04 EEST" duration-ms="9742" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWhatIsAimoodPage -->
        <test-method signature="getStartedHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:04 EEST" name="getStartedHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:48:10 EEST" duration-ms="5108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:04 EEST" name="setUp" finished-at="2023-09-12T23:48:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:10 EEST" name="learnHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:48:15 EEST" duration-ms="5105" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:10 EEST" name="setUp" finished-at="2023-09-12T23:48:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:15 EEST" name="resourcesHeaderWhatIsAimoodPage" finished-at="2023-09-12T23:48:20 EEST" duration-ms="5142" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:15 EEST" name="setUp" finished-at="2023-09-12T23:48:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainBlockWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:20 EEST" name="mainBlockWhatIsAimoodPage" finished-at="2023-09-12T23:48:26 EEST" duration-ms="5952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBlockWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:20 EEST" name="setUp" finished-at="2023-09-12T23:48:20 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="whyChooseWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:26 EEST" name="whyChooseWhatIsAimoodPage" finished-at="2023-09-12T23:48:32 EEST" duration-ms="6222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whyChooseWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:26 EEST" name="setUp" finished-at="2023-09-12T23:48:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="ecosystemWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:32 EEST" name="ecosystemWhatIsAimoodPage" finished-at="2023-09-12T23:48:38 EEST" duration-ms="6347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ecosystemWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:32 EEST" name="setUp" finished-at="2023-09-12T23:48:32 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterWhatIsAimoodPage(java.lang.String,java.lang.String)[pri:9, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:38 EEST" name="allFooterWhatIsAimoodPage" finished-at="2023-09-12T23:48:44 EEST" duration-ms="5960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/what-is-aimood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWhatIsAimoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:38 EEST" name="setUp" finished-at="2023-09-12T23:48:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.WhatIsAimood.WhatIsAimoodFirefoxTests@609e8838]" started-at="2023-09-12T23:48:44 EEST" name="tearDown" finished-at="2023-09-12T23:48:46 EEST" duration-ms="1554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.WhatIsAimood.WhatIsAimoodFirefoxTests -->
      <class name="tests.marketPlacePageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:27 EEST" name="setUp" finished-at="2023-09-12T23:29:28 EEST" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:1, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:28 EEST" name="allHeaderMarketPlacePage" finished-at="2023-09-12T23:29:37 EEST" duration-ms="8896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMarketPlacePage -->
        <test-method signature="getStartedHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:2, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:37 EEST" name="getStartedHeaderMarketPlacePage" finished-at="2023-09-12T23:29:43 EEST" duration-ms="6304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:37 EEST" name="setUp" finished-at="2023-09-12T23:29:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:3, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:43 EEST" name="learnHeaderMarketPlacePage" finished-at="2023-09-12T23:29:49 EEST" duration-ms="6186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:43 EEST" name="setUp" finished-at="2023-09-12T23:29:43 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:4, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:49 EEST" name="resourcesHeaderMarketPlacePage" finished-at="2023-09-12T23:29:55 EEST" duration-ms="6207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:49 EEST" name="setUp" finished-at="2023-09-12T23:29:49 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:55 EEST" name="setUp" finished-at="2023-09-12T23:29:55 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:6, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:29:55 EEST" name="mainSectionMarketPlacePage" finished-at="2023-09-12T23:30:02 EEST" duration-ms="7202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMarketPlacePage -->
        <test-method signature="statisticsSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:7, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:30:02 EEST" name="statisticsSectionMarketPlacePage" finished-at="2023-09-12T23:30:09 EEST" duration-ms="6684" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:30:02 EEST" name="setUp" finished-at="2023-09-12T23:30:02 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:8, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:30:09 EEST" name="allFooterMarketPlacePage" finished-at="2023-09-12T23:30:15 EEST" duration-ms="6248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:30:09 EEST" name="setUp" finished-at="2023-09-12T23:30:09 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@24569dba]" started-at="2023-09-12T23:30:15 EEST" name="tearDown" finished-at="2023-09-12T23:30:16 EEST" duration-ms="654" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.marketPlacePageTests.AllPageChromeTests -->
      <class name="tests.whitePaper.WhitePaperFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:37 EEST" name="setUp" finished-at="2023-09-12T23:45:39 EEST" duration-ms="2407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:1, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:39 EEST" name="allHeaderWhitePaperPage" finished-at="2023-09-12T23:45:49 EEST" duration-ms="10421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWhitePaperPage -->
        <test-method signature="getStartedHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:49 EEST" name="getStartedHeaderWhitePaperPage" finished-at="2023-09-12T23:45:55 EEST" duration-ms="6030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:49 EEST" name="setUp" finished-at="2023-09-12T23:45:49 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="marketPlaceHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:55 EEST" name="marketPlaceHeaderWhitePaperPage" finished-at="2023-09-12T23:46:01 EEST" duration-ms="5473" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.marketPlaceHeaderWhitePaperPage(WhitePaperFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketPlaceHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:45:55 EEST" name="setUp" finished-at="2023-09-12T23:45:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="marketPlaceHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:01 EEST" name="marketPlaceHeaderWhitePaperPage" finished-at="2023-09-12T23:46:06 EEST" duration-ms="5537" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.marketPlaceHeaderWhitePaperPage(WhitePaperFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketPlaceHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:01 EEST" name="setUp" finished-at="2023-09-12T23:46:01 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="marketPlaceHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:06 EEST" name="marketPlaceHeaderWhitePaperPage" finished-at="2023-09-12T23:46:12 EEST" duration-ms="5391" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.marketPlaceHeaderWhitePaperPage(WhitePaperFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketPlaceHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:06 EEST" name="setUp" finished-at="2023-09-12T23:46:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="whitePaperHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:12 EEST" name="whitePaperHeaderWhitePaperPage" finished-at="2023-09-12T23:46:17 EEST" duration-ms="5451" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.whitePaperHeaderWhitePaperPage(WhitePaperFirefoxTests.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whitePaperHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:12 EEST" name="setUp" finished-at="2023-09-12T23:46:12 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="whitePaperHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:17 EEST" name="whitePaperHeaderWhitePaperPage" finished-at="2023-09-12T23:46:23 EEST" duration-ms="5459" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.whitePaperHeaderWhitePaperPage(WhitePaperFirefoxTests.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whitePaperHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:17 EEST" name="setUp" finished-at="2023-09-12T23:46:17 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="whitePaperHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:23 EEST" name="whitePaperHeaderWhitePaperPage" finished-at="2023-09-12T23:46:28 EEST" duration-ms="5476" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="javax.imageio.IIOException">
            <message>
              <![CDATA[Can't read input file!]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.imageio.IIOException: Can't read input file!
at java.desktop/javax.imageio.ImageIO.read(ImageIO.java:1308)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:47)
at tests.whitePaper.WhitePaperFirefoxTests.whitePaperHeaderWhitePaperPage(WhitePaperFirefoxTests.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- javax.imageio.IIOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whitePaperHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:23 EEST" name="setUp" finished-at="2023-09-12T23:46:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:3, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:28 EEST" name="learnHeaderWhitePaperPage" finished-at="2023-09-12T23:46:34 EEST" duration-ms="5876" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:28 EEST" name="setUp" finished-at="2023-09-12T23:46:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:4, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:34 EEST" name="resourcesHeaderWhitePaperPage" finished-at="2023-09-12T23:46:40 EEST" duration-ms="5905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:34 EEST" name="setUp" finished-at="2023-09-12T23:46:34 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainBlockWhitePaperPage(java.lang.String,java.lang.String)[pri:5, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:40 EEST" name="mainBlockWhitePaperPage" finished-at="2023-09-12T23:46:46 EEST" duration-ms="5910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBlockWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:40 EEST" name="setUp" finished-at="2023-09-12T23:46:40 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="marketTokenWhitePaperPage(java.lang.String,java.lang.String)[pri:6, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:46 EEST" name="marketTokenWhitePaperPage" finished-at="2023-09-12T23:46:52 EEST" duration-ms="6178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketTokenWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:46 EEST" name="setUp" finished-at="2023-09-12T23:46:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterWhitePaperPage(java.lang.String,java.lang.String)[pri:7, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:52 EEST" name="allFooterWhitePaperPage" finished-at="2023-09-12T23:46:58 EEST" duration-ms="5909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:52 EEST" name="setUp" finished-at="2023-09-12T23:46:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.whitePaper.WhitePaperFirefoxTests@17fc391b]" started-at="2023-09-12T23:46:58 EEST" name="tearDown" finished-at="2023-09-12T23:47:00 EEST" duration-ms="1582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.whitePaper.WhitePaperFirefoxTests -->
      <class name="tests.fundPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:33:49 EEST" name="setUp" finished-at="2023-09-12T23:33:50 EEST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allHeaderFundPage(java.lang.String,java.lang.String)[pri:1, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:33:50 EEST" name="allHeaderFundPage" finished-at="2023-09-12T23:36:02 EEST" duration-ms="132667" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.fundPageTests.AllPageChromeTests.allHeaderFundPage(AllPageChromeTests.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderFundPage -->
        <test-method signature="allHeaderFundPage(java.lang.String,java.lang.String)[pri:1, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:02 EEST" name="allHeaderFundPage" finished-at="2023-09-12T23:36:24 EEST" duration-ms="21579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:02 EEST" name="setUp" finished-at="2023-09-12T23:36:02 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:24 EEST" name="setUp" finished-at="2023-09-12T23:36:24 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderFundPage(java.lang.String,java.lang.String)[pri:2, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:24 EEST" name="getStartedHeaderFundPage" finished-at="2023-09-12T23:36:29 EEST" duration-ms="5283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:29 EEST" name="setUp" finished-at="2023-09-12T23:36:29 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderFundPage(java.lang.String,java.lang.String)[pri:3, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:29 EEST" name="learnHeaderFundPage" finished-at="2023-09-12T23:36:35 EEST" duration-ms="5414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:35 EEST" name="setUp" finished-at="2023-09-12T23:36:35 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderFundPage(java.lang.String,java.lang.String)[pri:4, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:35 EEST" name="resourcesHeaderFundPage" finished-at="2023-09-12T23:36:40 EEST" duration-ms="5273" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderFundPage -->
        <test-method signature="mainSectionFundPage(java.lang.String,java.lang.String)[pri:6, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:40 EEST" name="mainSectionFundPage" finished-at="2023-09-12T23:36:47 EEST" duration-ms="7212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:40 EEST" name="setUp" finished-at="2023-09-12T23:36:40 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterFundPage(java.lang.String,java.lang.String)[pri:7, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:47 EEST" name="allFooterFundPage" finished-at="2023-09-12T23:36:53 EEST" duration-ms="6243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:47 EEST" name="setUp" finished-at="2023-09-12T23:36:47 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@6be968ce]" started-at="2023-09-12T23:36:53 EEST" name="tearDown" finished-at="2023-09-12T23:36:54 EEST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.fundPageTests.AllPageChromeTests -->
      <class name="tests.affiliateProgramPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:15 EEST" name="setUp" finished-at="2023-09-12T23:40:16 EEST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:1, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:16 EEST" name="allHeaderAffiliateProgramPage" finished-at="2023-09-12T23:40:23 EEST" duration-ms="7615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:23 EEST" name="setUp" finished-at="2023-09-12T23:40:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:2, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:23 EEST" name="getStartedHeaderAffiliateProgramPage" finished-at="2023-09-12T23:40:29 EEST" duration-ms="5373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderAffiliateProgramPage -->
        <test-method signature="learnHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:3, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:29 EEST" name="learnHeaderAffiliateProgramPage" finished-at="2023-09-12T23:40:34 EEST" duration-ms="5301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:29 EEST" name="setUp" finished-at="2023-09-12T23:40:29 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:4, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:34 EEST" name="resourcesHeaderAffiliateProgramPage" finished-at="2023-09-12T23:40:39 EEST" duration-ms="5321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:34 EEST" name="setUp" finished-at="2023-09-12T23:40:34 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:6, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:39 EEST" name="mainSectionAffiliateProgramPage" finished-at="2023-09-12T23:40:46 EEST" duration-ms="7229" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:39 EEST" name="setUp" finished-at="2023-09-12T23:40:39 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="affiliateSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:7, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:46 EEST" name="affiliateSectionAffiliateProgramPage" finished-at="2023-09-12T23:40:54 EEST" duration-ms="7559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- affiliateSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:46 EEST" name="setUp" finished-at="2023-09-12T23:40:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:54 EEST" name="setUp" finished-at="2023-09-12T23:40:54 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:8, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:40:54 EEST" name="allFooterAffiliateProgramPage" finished-at="2023-09-12T23:41:00 EEST" duration-ms="6260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@247310d0]" started-at="2023-09-12T23:41:00 EEST" name="tearDown" finished-at="2023-09-12T23:41:01 EEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.affiliateProgramPageTests.AllPageChromeTests -->
      <class name="tests.tokenMoodPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:32 EEST" name="setUp" finished-at="2023-09-12T23:31:34 EEST" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:34 EEST" name="allHeaderTokenMoodPage" finished-at="2023-09-12T23:31:45 EEST" duration-ms="10514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:45 EEST" name="setUp" finished-at="2023-09-12T23:31:45 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:45 EEST" name="getStartedHeaderTokenMoodPage" finished-at="2023-09-12T23:31:50 EEST" duration-ms="5089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:50 EEST" name="setUp" finished-at="2023-09-12T23:31:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:50 EEST" name="learnHeaderTokenMoodPage" finished-at="2023-09-12T23:31:55 EEST" duration-ms="5093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderTokenMoodPage -->
        <test-method signature="resourcesHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:55 EEST" name="resourcesHeaderTokenMoodPage" finished-at="2023-09-12T23:32:00 EEST" duration-ms="5169" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:31:55 EEST" name="setUp" finished-at="2023-09-12T23:31:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:00 EEST" name="mainSectionTokenMoodPage" finished-at="2023-09-12T23:32:07 EEST" duration-ms="6975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:00 EEST" name="setUp" finished-at="2023-09-12T23:32:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:07 EEST" name="statisticsSectionTokenMoodPage" finished-at="2023-09-12T23:32:15 EEST" duration-ms="7378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:07 EEST" name="setUp" finished-at="2023-09-12T23:32:07 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:15 EEST" name="allFooterTokenMoodPage" finished-at="2023-09-12T23:32:21 EEST" duration-ms="5997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/token-mood]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:15 EEST" name="setUp" finished-at="2023-09-12T23:32:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@496bc455]" started-at="2023-09-12T23:32:21 EEST" name="tearDown" finished-at="2023-09-12T23:32:22 EEST" duration-ms="1507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.tokenMoodPageTests.AllPageFirefoxTests -->
      <class name="tests.stakingPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:35 EEST" name="setUp" finished-at="2023-09-12T23:43:35 EEST" duration-ms="845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderStakingPage(java.lang.String,java.lang.String)[pri:1, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:35 EEST" name="allHeaderStakingPage" finished-at="2023-09-12T23:43:44 EEST" duration-ms="8196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderStakingPage -->
        <test-method signature="getStartedHeaderStakingPage(java.lang.String,java.lang.String)[pri:2, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:44 EEST" name="getStartedHeaderStakingPage" finished-at="2023-09-12T23:43:50 EEST" duration-ms="6275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:44 EEST" name="setUp" finished-at="2023-09-12T23:43:44 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderStakingPage(java.lang.String,java.lang.String)[pri:3, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:50 EEST" name="learnHeaderStakingPage" finished-at="2023-09-12T23:43:56 EEST" duration-ms="6269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:50 EEST" name="setUp" finished-at="2023-09-12T23:43:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderStakingPage(java.lang.String,java.lang.String)[pri:4, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:56 EEST" name="resourcesHeaderStakingPage" finished-at="2023-09-12T23:44:02 EEST" duration-ms="6234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:43:56 EEST" name="setUp" finished-at="2023-09-12T23:43:56 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:02 EEST" name="setUp" finished-at="2023-09-12T23:44:02 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionStakingPage(java.lang.String,java.lang.String)[pri:6, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:02 EEST" name="mainSectionStakingPage" finished-at="2023-09-12T23:44:10 EEST" duration-ms="7294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:10 EEST" name="setUp" finished-at="2023-09-12T23:44:10 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="delegatedSectionStakingPage(java.lang.String,java.lang.String)[pri:7, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:10 EEST" name="delegatedSectionStakingPage" finished-at="2023-09-12T23:44:19 EEST" duration-ms="9565" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegatedSectionStakingPage -->
        <test-method signature="calcStakSectionStakingPage(java.lang.String,java.lang.String)[pri:8, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:19 EEST" name="calcStakSectionStakingPage" finished-at="2023-09-12T23:44:29 EEST" duration-ms="9829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcStakSectionStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:19 EEST" name="setUp" finished-at="2023-09-12T23:44:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterStakingPage(java.lang.String,java.lang.String)[pri:9, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:29 EEST" name="allFooterStakingPage" finished-at="2023-09-12T23:44:35 EEST" duration-ms="6284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:29 EEST" name="setUp" finished-at="2023-09-12T23:44:29 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.stakingPageTests.AllPageChromeTests@4a003cbe]" started-at="2023-09-12T23:44:35 EEST" name="tearDown" finished-at="2023-09-12T23:44:36 EEST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.stakingPageTests.AllPageChromeTests -->
      <class name="tests.resetPasswordPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:27 EEST" name="setUp" finished-at="2023-09-12T23:49:28 EEST" duration-ms="799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:1, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:28 EEST" name="allHeaderResetPasswordPage" finished-at="2023-09-12T23:49:36 EEST" duration-ms="8283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:36 EEST" name="setUp" finished-at="2023-09-12T23:49:36 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:2, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:36 EEST" name="getStartedHeaderResetPasswordPage" finished-at="2023-09-12T23:49:42 EEST" duration-ms="5419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderResetPasswordPage -->
        <test-method signature="learnHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:3, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:42 EEST" name="learnHeaderResetPasswordPage" finished-at="2023-09-12T23:49:47 EEST" duration-ms="5296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:42 EEST" name="setUp" finished-at="2023-09-12T23:49:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderResetPasswordPage(java.lang.String,java.lang.String)[pri:4, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:47 EEST" name="resourcesHeaderResetPasswordPage" finished-at="2023-09-12T23:49:52 EEST" duration-ms="5308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:47 EEST" name="setUp" finished-at="2023-09-12T23:49:47 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionResetPasswordPage(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:52 EEST" name="mainSectionResetPasswordPage" finished-at="2023-09-12T23:49:59 EEST" duration-ms="6849" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPageTests.AllPageChromeTests.mainSectionResetPasswordPage(AllPageChromeTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:52 EEST" name="setUp" finished-at="2023-09-12T23:49:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:59 EEST" name="setUp" finished-at="2023-09-12T23:49:59 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionResetPasswordPage(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:49:59 EEST" name="mainSectionResetPasswordPage" finished-at="2023-09-12T23:50:06 EEST" duration-ms="6853" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPageTests.AllPageChromeTests.mainSectionResetPasswordPage(AllPageChromeTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage -->
        <test-method signature="mainSectionResetPasswordPage(java.lang.String,java.lang.String)[pri:6, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:50:06 EEST" name="mainSectionResetPasswordPage" finished-at="2023-09-12T23:50:13 EEST" duration-ms="6853" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.resetPasswordPageTests.AllPageChromeTests.mainSectionResetPasswordPage(AllPageChromeTests.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:50:06 EEST" name="setUp" finished-at="2023-09-12T23:50:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterResetPasswordPage(java.lang.String,java.lang.String)[pri:7, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:50:13 EEST" name="allFooterResetPasswordPage" finished-at="2023-09-12T23:50:19 EEST" duration-ms="6230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/reset-password-1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterResetPasswordPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:50:13 EEST" name="setUp" finished-at="2023-09-12T23:50:13 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.resetPasswordPageTests.AllPageChromeTests@43df23d3]" started-at="2023-09-12T23:50:19 EEST" name="tearDown" finished-at="2023-09-12T23:50:20 EEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.resetPasswordPageTests.AllPageChromeTests -->
      <class name="tests.fundPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:09 EEST" name="setUp" finished-at="2023-09-12T23:33:12 EEST" duration-ms="2734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderFundPage(java.lang.String,java.lang.String)[pri:1, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:12 EEST" name="allHeaderFundPage" finished-at="2023-09-12T23:33:19 EEST" duration-ms="7720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:19 EEST" name="setUp" finished-at="2023-09-12T23:33:19 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderFundPage(java.lang.String,java.lang.String)[pri:2, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:19 EEST" name="getStartedHeaderFundPage" finished-at="2023-09-12T23:33:25 EEST" duration-ms="5093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderFundPage -->
        <test-method signature="learnHeaderFundPage(java.lang.String,java.lang.String)[pri:3, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:25 EEST" name="learnHeaderFundPage" finished-at="2023-09-12T23:33:30 EEST" duration-ms="5096" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:25 EEST" name="setUp" finished-at="2023-09-12T23:33:25 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:30 EEST" name="setUp" finished-at="2023-09-12T23:33:30 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderFundPage(java.lang.String,java.lang.String)[pri:4, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:30 EEST" name="resourcesHeaderFundPage" finished-at="2023-09-12T23:33:35 EEST" duration-ms="5172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderFundPage -->
        <test-method signature="mainSectionFundPage(java.lang.String,java.lang.String)[pri:6, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:35 EEST" name="mainSectionFundPage" finished-at="2023-09-12T23:33:42 EEST" duration-ms="6923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:35 EEST" name="setUp" finished-at="2023-09-12T23:33:35 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterFundPage(java.lang.String,java.lang.String)[pri:7, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:42 EEST" name="allFooterFundPage" finished-at="2023-09-12T23:33:48 EEST" duration-ms="5988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:42 EEST" name="setUp" finished-at="2023-09-12T23:33:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@7188af83]" started-at="2023-09-12T23:33:48 EEST" name="tearDown" finished-at="2023-09-12T23:33:49 EEST" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.fundPageTests.AllPageFirefoxTests -->
      <class name="tests.buySellMoodCoinTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:16 EEST" name="setUp" finished-at="2023-09-12T23:30:18 EEST" duration-ms="2424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:18 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:30:25 EEST" duration-ms="6907" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:25 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:30:31 EEST" duration-ms="5118" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:25 EEST" name="setUp" finished-at="2023-09-12T23:30:25 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:31 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:30:36 EEST" duration-ms="5079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:31 EEST" name="setUp" finished-at="2023-09-12T23:30:31 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:36 EEST" name="setUp" finished-at="2023-09-12T23:30:36 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:36 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:30:41 EEST" duration-ms="5163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:41 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-09-12T23:30:48 EEST" duration-ms="6918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:41 EEST" name="setUp" finished-at="2023-09-12T23:30:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:48 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-09-12T23:30:54 EEST" duration-ms="5913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:48 EEST" name="setUp" finished-at="2023-09-12T23:30:48 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@5ddeb7cb]" started-at="2023-09-12T23:30:54 EEST" name="tearDown" finished-at="2023-09-12T23:30:55 EEST" duration-ms="1311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageFirefoxTests -->
      <class name="tests.signInPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:00 EEST" name="setUp" finished-at="2023-09-12T23:52:02 EEST" duration-ms="2428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderSignInPage(java.lang.String,java.lang.String)[pri:1, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:02 EEST" name="allHeaderSignInPage" finished-at="2023-09-12T23:52:11 EEST" duration-ms="8663" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderSignInPage -->
        <test-method signature="getStartedHeaderSignInPage(java.lang.String,java.lang.String)[pri:2, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:11 EEST" name="getStartedHeaderSignInPage" finished-at="2023-09-12T23:52:16 EEST" duration-ms="5092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:11 EEST" name="setUp" finished-at="2023-09-12T23:52:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderSignInPage(java.lang.String,java.lang.String)[pri:3, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:16 EEST" name="learnHeaderSignInPage" finished-at="2023-09-12T23:52:21 EEST" duration-ms="5108" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:16 EEST" name="setUp" finished-at="2023-09-12T23:52:16 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderSignInPage(java.lang.String,java.lang.String)[pri:4, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:21 EEST" name="resourcesHeaderSignInPage" finished-at="2023-09-12T23:52:26 EEST" duration-ms="5163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:21 EEST" name="setUp" finished-at="2023-09-12T23:52:21 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:26 EEST" name="setUp" finished-at="2023-09-12T23:52:26 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionSignInPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:26 EEST" name="mainSectionSignInPage" finished-at="2023-09-12T23:52:33 EEST" duration-ms="6988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignInPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:33 EEST" name="setUp" finished-at="2023-09-12T23:52:33 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterSignInPage(java.lang.String,java.lang.String)[pri:7, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:33 EEST" name="allFooterSignInPage" finished-at="2023-09-12T23:52:39 EEST" duration-ms="5971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterSignInPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.signInPageTests.AllPageFirefoxTests@23e84203]" started-at="2023-09-12T23:52:39 EEST" name="tearDown" finished-at="2023-09-12T23:52:41 EEST" duration-ms="1324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.signInPageTests.AllPageFirefoxTests -->
      <class name="tests.affiliateProgramPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:36:54 EEST" name="setUp" finished-at="2023-09-12T23:36:56 EEST" duration-ms="2433" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:1, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:36:56 EEST" name="allHeaderAffiliateProgramPage" finished-at="2023-09-12T23:39:17 EEST" duration-ms="140803" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.affiliateProgramPageTests.AllPageFirefoxTests.allHeaderAffiliateProgramPage(AllPageFirefoxTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:17 EEST" name="setUp" finished-at="2023-09-12T23:39:17 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:1, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:17 EEST" name="allHeaderAffiliateProgramPage" finished-at="2023-09-12T23:39:38 EEST" duration-ms="21042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderAffiliateProgramPage -->
        <test-method signature="getStartedHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:2, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:38 EEST" name="getStartedHeaderAffiliateProgramPage" finished-at="2023-09-12T23:39:43 EEST" duration-ms="5104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:38 EEST" name="setUp" finished-at="2023-09-12T23:39:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:3, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:43 EEST" name="learnHeaderAffiliateProgramPage" finished-at="2023-09-12T23:39:49 EEST" duration-ms="5129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:43 EEST" name="setUp" finished-at="2023-09-12T23:39:43 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:4, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:49 EEST" name="resourcesHeaderAffiliateProgramPage" finished-at="2023-09-12T23:39:54 EEST" duration-ms="5007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:49 EEST" name="setUp" finished-at="2023-09-12T23:39:49 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:6, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:54 EEST" name="mainSectionAffiliateProgramPage" finished-at="2023-09-12T23:40:00 EEST" duration-ms="6932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:39:54 EEST" name="setUp" finished-at="2023-09-12T23:39:54 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="affiliateSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:7, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:40:00 EEST" name="affiliateSectionAffiliateProgramPage" finished-at="2023-09-12T23:40:08 EEST" duration-ms="7149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- affiliateSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:40:00 EEST" name="setUp" finished-at="2023-09-12T23:40:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:8, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:40:08 EEST" name="allFooterAffiliateProgramPage" finished-at="2023-09-12T23:40:14 EEST" duration-ms="5924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:40:08 EEST" name="setUp" finished-at="2023-09-12T23:40:08 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@7c37508a]" started-at="2023-09-12T23:40:14 EEST" name="tearDown" finished-at="2023-09-12T23:40:15 EEST" duration-ms="1167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.affiliateProgramPageTests.AllPageFirefoxTests -->
      <class name="tests.buySellMoodCoinTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:30:55 EEST" name="setUp" finished-at="2023-09-12T23:30:56 EEST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:30:56 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:31:02 EEST" duration-ms="6308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:02 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:31:07 EEST" duration-ms="5359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:02 EEST" name="setUp" finished-at="2023-09-12T23:31:02 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:07 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:31:13 EEST" duration-ms="5278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:07 EEST" name="setUp" finished-at="2023-09-12T23:31:07 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:13 EEST" name="setUp" finished-at="2023-09-12T23:31:13 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:13 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-09-12T23:31:18 EEST" duration-ms="5287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:18 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-09-12T23:31:25 EEST" duration-ms="7217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:18 EEST" name="setUp" finished-at="2023-09-12T23:31:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:25 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-09-12T23:31:31 EEST" duration-ms="6256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:25 EEST" name="setUp" finished-at="2023-09-12T23:31:25 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@70ed52de]" started-at="2023-09-12T23:31:31 EEST" name="tearDown" finished-at="2023-09-12T23:31:32 EEST" duration-ms="637" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageChromeTests -->
      <class name="tests.signUpPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:14 EEST" name="setUp" finished-at="2023-09-12T23:54:15 EEST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderSignUpPage(java.lang.String,java.lang.String)[pri:1, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:15 EEST" name="allHeaderSignUpPage" finished-at="2023-09-12T23:54:23 EEST" duration-ms="8249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderSignUpPage -->
        <test-method signature="getStartedHeaderSignUpPage(java.lang.String,java.lang.String)[pri:2, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:23 EEST" name="getStartedHeaderSignUpPage" finished-at="2023-09-12T23:54:29 EEST" duration-ms="5348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:23 EEST" name="setUp" finished-at="2023-09-12T23:54:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderSignUpPage(java.lang.String,java.lang.String)[pri:3, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:29 EEST" name="learnHeaderSignUpPage" finished-at="2023-09-12T23:54:34 EEST" duration-ms="5432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:29 EEST" name="setUp" finished-at="2023-09-12T23:54:29 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderSignUpPage(java.lang.String,java.lang.String)[pri:4, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:34 EEST" name="resourcesHeaderSignUpPage" finished-at="2023-09-12T23:54:40 EEST" duration-ms="5338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:34 EEST" name="setUp" finished-at="2023-09-12T23:54:34 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionSignUpPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:40 EEST" name="mainSectionSignUpPage" finished-at="2023-09-12T23:54:46 EEST" duration-ms="6847" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.signUpPageTests.AllPageChromeTests.mainSectionSignUpPage(AllPageChromeTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:40 EEST" name="setUp" finished-at="2023-09-12T23:54:40 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="mainSectionSignUpPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:46 EEST" name="mainSectionSignUpPage" finished-at="2023-09-12T23:54:53 EEST" duration-ms="6850" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.signUpPageTests.AllPageChromeTests.mainSectionSignUpPage(AllPageChromeTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:46 EEST" name="setUp" finished-at="2023-09-12T23:54:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:53 EEST" name="setUp" finished-at="2023-09-12T23:54:53 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionSignUpPage(java.lang.String,java.lang.String)[pri:6, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:54:53 EEST" name="mainSectionSignUpPage" finished-at="2023-09-12T23:55:00 EEST" duration-ms="6844" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.signUpPageTests.AllPageChromeTests.mainSectionSignUpPage(AllPageChromeTests.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:248)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionSignUpPage -->
        <test-method signature="allFooterSignUpPage(java.lang.String,java.lang.String)[pri:7, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:55:00 EEST" name="allFooterSignUpPage" finished-at="2023-09-12T23:55:06 EEST" duration-ms="6227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/register]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterSignUpPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:55:00 EEST" name="setUp" finished-at="2023-09-12T23:55:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.signUpPageTests.AllPageChromeTests@514646ef]" started-at="2023-09-12T23:55:06 EEST" name="tearDown" finished-at="2023-09-12T23:55:07 EEST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.signUpPageTests.AllPageChromeTests -->
      <class name="tests.stakingPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:33 EEST" name="setUp" finished-at="2023-09-12T23:42:35 EEST" duration-ms="2420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderStakingPage(java.lang.String,java.lang.String)[pri:1, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:35 EEST" name="allHeaderStakingPage" finished-at="2023-09-12T23:42:45 EEST" duration-ms="10016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderStakingPage -->
        <test-method signature="getStartedHeaderStakingPage(java.lang.String,java.lang.String)[pri:2, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:45 EEST" name="getStartedHeaderStakingPage" finished-at="2023-09-12T23:42:51 EEST" duration-ms="6027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:45 EEST" name="setUp" finished-at="2023-09-12T23:42:45 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderStakingPage(java.lang.String,java.lang.String)[pri:3, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:51 EEST" name="learnHeaderStakingPage" finished-at="2023-09-12T23:42:57 EEST" duration-ms="6038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:51 EEST" name="setUp" finished-at="2023-09-12T23:42:51 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderStakingPage(java.lang.String,java.lang.String)[pri:4, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:57 EEST" name="resourcesHeaderStakingPage" finished-at="2023-09-12T23:43:03 EEST" duration-ms="6085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:42:57 EEST" name="setUp" finished-at="2023-09-12T23:42:57 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionStakingPage(java.lang.String,java.lang.String)[pri:6, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:03 EEST" name="mainSectionStakingPage" finished-at="2023-09-12T23:43:10 EEST" duration-ms="6950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:03 EEST" name="setUp" finished-at="2023-09-12T23:43:03 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="delegatedSectionStakingPage(java.lang.String,java.lang.String)[pri:7, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:10 EEST" name="delegatedSectionStakingPage" finished-at="2023-09-12T23:43:18 EEST" duration-ms="7262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delegatedSectionStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:10 EEST" name="setUp" finished-at="2023-09-12T23:43:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="calcStakSectionStakingPage(java.lang.String,java.lang.String)[pri:8, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:18 EEST" name="calcStakSectionStakingPage" finished-at="2023-09-12T23:43:27 EEST" duration-ms="9383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- calcStakSectionStakingPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:18 EEST" name="setUp" finished-at="2023-09-12T23:43:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:27 EEST" name="setUp" finished-at="2023-09-12T23:43:27 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterStakingPage(java.lang.String,java.lang.String)[pri:9, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:27 EEST" name="allFooterStakingPage" finished-at="2023-09-12T23:43:33 EEST" duration-ms="5921" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/stake-delegate]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterStakingPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.stakingPageTests.AllPageFirefoxTests@76494737]" started-at="2023-09-12T23:43:33 EEST" name="tearDown" finished-at="2023-09-12T23:43:35 EEST" duration-ms="1588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.stakingPageTests.AllPageFirefoxTests -->
      <class name="tests.mainPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:08 EEST" name="setUp" finished-at="2023-09-12T23:27:09 EEST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMainPage(java.lang.String,java.lang.String)[pri:1, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:09 EEST" name="allHeaderMainPage" finished-at="2023-09-12T23:27:20 EEST" duration-ms="11326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMainPage -->
        <test-method signature="getStartedHeaderMainPage(java.lang.String,java.lang.String)[pri:2, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:20 EEST" name="getStartedHeaderMainPage" finished-at="2023-09-12T23:27:26 EEST" duration-ms="5424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:20 EEST" name="setUp" finished-at="2023-09-12T23:27:20 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMainPage(java.lang.String,java.lang.String)[pri:3, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:26 EEST" name="learnHeaderMainPage" finished-at="2023-09-12T23:27:35 EEST" duration-ms="9251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:26 EEST" name="setUp" finished-at="2023-09-12T23:27:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMainPage(java.lang.String,java.lang.String)[pri:4, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:35 EEST" name="resourcesHeaderMainPage" finished-at="2023-09-12T23:27:40 EEST" duration-ms="5368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:35 EEST" name="setUp" finished-at="2023-09-12T23:27:35 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMainPage(java.lang.String,java.lang.String)[pri:6, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:40 EEST" name="mainSectionMainPage" finished-at="2023-09-12T23:27:48 EEST" duration-ms="7326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:40 EEST" name="setUp" finished-at="2023-09-12T23:27:40 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:48 EEST" name="setUp" finished-at="2023-09-12T23:27:48 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="videoSectionMainPage(java.lang.String,java.lang.String)[pri:7, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:48 EEST" name="videoSectionMainPage" finished-at="2023-09-12T23:27:55 EEST" duration-ms="7745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- videoSectionMainPage -->
        <test-method signature="roadmapSectionMainPage(java.lang.String,java.lang.String)[pri:8, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:55 EEST" name="roadmapSectionMainPage" finished-at="2023-09-12T23:28:06 EEST" duration-ms="10593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roadmapSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:27:55 EEST" name="setUp" finished-at="2023-09-12T23:27:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:06 EEST" name="setUp" finished-at="2023-09-12T23:28:06 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMainPage(java.lang.String,java.lang.String)[pri:9, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:06 EEST" name="statisticsSectionMainPage" finished-at="2023-09-12T23:28:18 EEST" duration-ms="11893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMainPage -->
        <test-method signature="leaningSectionMainPage(java.lang.String,java.lang.String)[pri:10, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:18 EEST" name="leaningSectionMainPage" finished-at="2023-09-12T23:28:28 EEST" duration-ms="10127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leaningSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:18 EEST" name="setUp" finished-at="2023-09-12T23:28:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMainPage(java.lang.String,java.lang.String)[pri:11, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:28 EEST" name="allFooterMainPage" finished-at="2023-09-12T23:28:34 EEST" duration-ms="6369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:28 EEST" name="setUp" finished-at="2023-09-12T23:28:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@4d1c005e]" started-at="2023-09-12T23:28:34 EEST" name="tearDown" finished-at="2023-09-12T23:28:35 EEST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.mainPageTests.AllPageChromeTests -->
      <class name="tests.whitePaper.WhitePaperChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:36 EEST" name="setUp" finished-at="2023-09-12T23:44:37 EEST" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:1, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:37 EEST" name="allHeaderWhitePaperPage" finished-at="2023-09-12T23:44:46 EEST" duration-ms="8879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderWhitePaperPage -->
        <test-method signature="getStartedHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:46 EEST" name="getStartedHeaderWhitePaperPage" finished-at="2023-09-12T23:44:52 EEST" duration-ms="6297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:46 EEST" name="setUp" finished-at="2023-09-12T23:44:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="marketPlaceHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:52 EEST" name="marketPlaceHeaderWhitePaperPage" finished-at="2023-09-12T23:44:58 EEST" duration-ms="6207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- marketPlaceHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:52 EEST" name="setUp" finished-at="2023-09-12T23:44:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="whitePaperHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:2, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:58 EEST" name="whitePaperHeaderWhitePaperPage" finished-at="2023-09-12T23:45:04 EEST" duration-ms="6208" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- whitePaperHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:44:58 EEST" name="setUp" finished-at="2023-09-12T23:44:58 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:3, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:04 EEST" name="learnHeaderWhitePaperPage" finished-at="2023-09-12T23:45:11 EEST" duration-ms="6185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:04 EEST" name="setUp" finished-at="2023-09-12T23:45:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderWhitePaperPage(java.lang.String,java.lang.String)[pri:4, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:11 EEST" name="resourcesHeaderWhitePaperPage" finished-at="2023-09-12T23:45:17 EEST" duration-ms="6236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:11 EEST" name="setUp" finished-at="2023-09-12T23:45:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainBlockWhitePaperPage(java.lang.String,java.lang.String)[pri:5, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:17 EEST" name="mainBlockWhitePaperPage" finished-at="2023-09-12T23:45:23 EEST" duration-ms="6248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainBlockWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:17 EEST" name="setUp" finished-at="2023-09-12T23:45:17 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="EweuimtPage(java.lang.String,java.lang.String)[pri:6, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:23 EEST" name="EweuimtPage" finished-at="2023-09-12T23:45:30 EEST" duration-ms="6657" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EweuimtPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:23 EEST" name="setUp" finished-at="2023-09-12T23:45:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterWhitePaperPage(java.lang.String,java.lang.String)[pri:7, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:30 EEST" name="allFooterWhitePaperPage" finished-at="2023-09-12T23:45:36 EEST" duration-ms="6252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/white-paper]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterWhitePaperPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:30 EEST" name="setUp" finished-at="2023-09-12T23:45:30 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.whitePaper.WhitePaperChromeTests@4082ba93]" started-at="2023-09-12T23:45:36 EEST" name="tearDown" finished-at="2023-09-12T23:45:37 EEST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.whitePaper.WhitePaperChromeTests -->
    </test> <!-- ai-mood - Pixel perfect regression -->
  </suite> <!-- WPT -->
</testng-results>
