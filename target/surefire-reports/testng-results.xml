<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="24" ignored="0" total="146" passed="111" failed="11" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-16T15:24:09 EEST" name="WPT" finished-at="2023-08-16T15:38:18 EEST" duration-ms="848934">
    <groups>
    </groups>
    <test started-at="2023-08-16T15:24:09 EEST" name="ai-mood - Pixel perfect regression" finished-at="2023-08-16T15:38:18 EEST" duration-ms="848934">
      <class name="tests.buySellMoodCoinTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:08 EEST" name="setUp" finished-at="2023-08-16T15:31:11 EEST" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:11 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:31:16 EEST" duration-ms="5560" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:16 EEST" name="setUp" finished-at="2023-08-16T15:31:16 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:16 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:31:35 EEST" duration-ms="18491" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:35 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:31:53 EEST" duration-ms="18501" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:35 EEST" name="setUp" finished-at="2023-08-16T15:31:35 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:53 EEST" name="setUp" finished-at="2023-08-16T15:31:53 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:53 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:31:57 EEST" duration-ms="3672" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.getStartedHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:57 EEST" name="setUp" finished-at="2023-08-16T15:31:57 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:31:57 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:00 EEST" duration-ms="3493" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.getStartedHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:00 EEST" name="setUp" finished-at="2023-08-16T15:32:00 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:00 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:04 EEST" duration-ms="3511" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.getStartedHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:04 EEST" name="setUp" finished-at="2023-08-16T15:32:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:04 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:07 EEST" duration-ms="3493" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.learnHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:07 EEST" name="setUp" finished-at="2023-08-16T15:32:07 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:07 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:11 EEST" duration-ms="3464" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.learnHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:11 EEST" name="setUp" finished-at="2023-08-16T15:32:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:11 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:14 EEST" duration-ms="3486" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.learnHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:14 EEST" name="setUp" finished-at="2023-08-16T15:32:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:14 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:18 EEST" duration-ms="3478" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.resourcesHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:18 EEST" name="setUp" finished-at="2023-08-16T15:32:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:18 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:21 EEST" duration-ms="3469" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.resourcesHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:21 EEST" name="setUp" finished-at="2023-08-16T15:32:21 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:21 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:32:25 EEST" duration-ms="3560" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.resourcesHeaderBuySellMoodCoinPage(AllPageFirefoxTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:25 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-08-16T15:32:30 EEST" duration-ms="4890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:25 EEST" name="setUp" finished-at="2023-08-16T15:32:25 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:30 EEST" name="setUp" finished-at="2023-08-16T15:32:30 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:30 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:34 EEST" duration-ms="4802" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allFooterBuySellMoodCoinPage(AllPageFirefoxTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:34 EEST" name="setUp" finished-at="2023-08-16T15:32:34 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:34 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:39 EEST" duration-ms="4738" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allFooterBuySellMoodCoinPage(AllPageFirefoxTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:39 EEST" name="setUp" finished-at="2023-08-16T15:32:39 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:39 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:44 EEST" duration-ms="4615" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageFirefoxTests.allFooterBuySellMoodCoinPage(AllPageFirefoxTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method signature="partnFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:8, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:44 EEST" name="partnFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:49 EEST" duration-ms="4832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:44 EEST" name="setUp" finished-at="2023-08-16T15:32:44 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:49 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:53 EEST" duration-ms="4797" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:49 EEST" name="setUp" finished-at="2023-08-16T15:32:49 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:53 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:32:57 EEST" duration-ms="3956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:53 EEST" name="setUp" finished-at="2023-08-16T15:32:53 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageFirefoxTests@46cdf8bd]" started-at="2023-08-16T15:32:57 EEST" name="tearDown" finished-at="2023-08-16T15:32:59 EEST" duration-ms="1559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageFirefoxTests -->
      <class name="tests.fundPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:34:57 EEST" name="setUp" finished-at="2023-08-16T15:34:59 EEST" duration-ms="2346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderFundPage(java.lang.String,java.lang.String)[pri:1, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:34:59 EEST" name="allHeaderFundPage" finished-at="2023-08-16T15:35:05 EEST" duration-ms="5965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderFundPage -->
        <test-method signature="getStartedHeaderFundPage(java.lang.String,java.lang.String)[pri:2, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:05 EEST" name="getStartedHeaderFundPage" finished-at="2023-08-16T15:35:09 EEST" duration-ms="4087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:05 EEST" name="setUp" finished-at="2023-08-16T15:35:05 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderFundPage(java.lang.String,java.lang.String)[pri:3, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:09 EEST" name="learnHeaderFundPage" finished-at="2023-08-16T15:35:14 EEST" duration-ms="4087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:09 EEST" name="setUp" finished-at="2023-08-16T15:35:09 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:14 EEST" name="setUp" finished-at="2023-08-16T15:35:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderFundPage(java.lang.String,java.lang.String)[pri:4, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:14 EEST" name="resourcesHeaderFundPage" finished-at="2023-08-16T15:35:18 EEST" duration-ms="4125" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderFundPage -->
        <test-method signature="mainSectionFundPage(java.lang.String,java.lang.String)[pri:6, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:18 EEST" name="mainSectionFundPage" finished-at="2023-08-16T15:35:23 EEST" duration-ms="4896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:18 EEST" name="setUp" finished-at="2023-08-16T15:35:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterFundPage(java.lang.String,java.lang.String)[pri:7, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:23 EEST" name="allFooterFundPage" finished-at="2023-08-16T15:35:27 EEST" duration-ms="4932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:23 EEST" name="setUp" finished-at="2023-08-16T15:35:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:27 EEST" name="setUp" finished-at="2023-08-16T15:35:27 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterFundPage(java.lang.String,java.lang.String)[pri:8, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:27 EEST" name="partnFooterFundPage" finished-at="2023-08-16T15:35:32 EEST" duration-ms="4864" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:32 EEST" name="setUp" finished-at="2023-08-16T15:35:32 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterFundPage(java.lang.String,java.lang.String)[pri:9, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:32 EEST" name="subFooterFundPage" finished-at="2023-08-16T15:35:37 EEST" duration-ms="4854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:37 EEST" name="setUp" finished-at="2023-08-16T15:35:37 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterFundPage(java.lang.String,java.lang.String)[pri:10, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:37 EEST" name="copFooterFundPage" finished-at="2023-08-16T15:35:41 EEST" duration-ms="3989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterFundPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.fundPageTests.AllPageFirefoxTests@26d9b808]" started-at="2023-08-16T15:35:41 EEST" name="tearDown" finished-at="2023-08-16T15:35:43 EEST" duration-ms="1721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.fundPageTests.AllPageFirefoxTests -->
      <class name="tests.marketPlacePageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:17 EEST" name="setUp" finished-at="2023-08-16T15:27:19 EEST" duration-ms="2423" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:1, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:19 EEST" name="allHeaderMarketPlacePage" finished-at="2023-08-16T15:27:33 EEST" duration-ms="13677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:33 EEST" name="setUp" finished-at="2023-08-16T15:27:33 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:2, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:33 EEST" name="getStartedHeaderMarketPlacePage" finished-at="2023-08-16T15:27:37 EEST" duration-ms="4066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:37 EEST" name="setUp" finished-at="2023-08-16T15:27:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:3, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:37 EEST" name="learnHeaderMarketPlacePage" finished-at="2023-08-16T15:27:41 EEST" duration-ms="4085" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMarketPlacePage -->
        <test-method signature="resourcesHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:4, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:41 EEST" name="resourcesHeaderMarketPlacePage" finished-at="2023-08-16T15:27:45 EEST" duration-ms="4104" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:41 EEST" name="setUp" finished-at="2023-08-16T15:27:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:45 EEST" name="setUp" finished-at="2023-08-16T15:27:45 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:6, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:45 EEST" name="mainSectionMarketPlacePage" finished-at="2023-08-16T15:27:50 EEST" duration-ms="4886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:50 EEST" name="setUp" finished-at="2023-08-16T15:27:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:7, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:50 EEST" name="statisticsSectionMarketPlacePage" finished-at="2023-08-16T15:27:55 EEST" duration-ms="5330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:55 EEST" name="setUp" finished-at="2023-08-16T15:27:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:8, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:27:55 EEST" name="allFooterMarketPlacePage" finished-at="2023-08-16T15:28:00 EEST" duration-ms="5013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMarketPlacePage -->
        <test-method signature="partnFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:9, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:00 EEST" name="partnFooterMarketPlacePage" finished-at="2023-08-16T15:28:05 EEST" duration-ms="4980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:00 EEST" name="setUp" finished-at="2023-08-16T15:28:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:05 EEST" name="setUp" finished-at="2023-08-16T15:28:05 EEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:10, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:05 EEST" name="subFooterMarketPlacePage" finished-at="2023-08-16T15:28:10 EEST" duration-ms="4908" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:10 EEST" name="setUp" finished-at="2023-08-16T15:28:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:11, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:10 EEST" name="copFooterMarketPlacePage" finished-at="2023-08-16T15:28:14 EEST" duration-ms="3940" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterMarketPlacePage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.marketPlacePageTests.AllPageFirefoxTests@2ddc9a9f]" started-at="2023-08-16T15:28:14 EEST" name="tearDown" finished-at="2023-08-16T15:28:16 EEST" duration-ms="1727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.marketPlacePageTests.AllPageFirefoxTests -->
      <class name="tests.marketPlacePageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:16 EEST" name="setUp" finished-at="2023-08-16T15:28:17 EEST" duration-ms="1558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:1, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:17 EEST" name="allHeaderMarketPlacePage" finished-at="2023-08-16T15:28:24 EEST" duration-ms="6353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMarketPlacePage -->
        <test-method signature="getStartedHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:2, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:24 EEST" name="getStartedHeaderMarketPlacePage" finished-at="2023-08-16T15:28:28 EEST" duration-ms="4440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:24 EEST" name="setUp" finished-at="2023-08-16T15:28:24 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:28 EEST" name="setUp" finished-at="2023-08-16T15:28:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:3, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:28 EEST" name="learnHeaderMarketPlacePage" finished-at="2023-08-16T15:28:32 EEST" duration-ms="4366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:32 EEST" name="setUp" finished-at="2023-08-16T15:28:32 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMarketPlacePage(java.lang.String,java.lang.String)[pri:4, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:32 EEST" name="resourcesHeaderMarketPlacePage" finished-at="2023-08-16T15:28:37 EEST" duration-ms="4331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMarketPlacePage -->
        <test-method signature="mainSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:6, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:37 EEST" name="mainSectionMarketPlacePage" finished-at="2023-08-16T15:28:42 EEST" duration-ms="5200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:37 EEST" name="setUp" finished-at="2023-08-16T15:28:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:42 EEST" name="setUp" finished-at="2023-08-16T15:28:42 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMarketPlacePage(java.lang.String,java.lang.String)[pri:7, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:42 EEST" name="statisticsSectionMarketPlacePage" finished-at="2023-08-16T15:28:48 EEST" duration-ms="5850" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMarketPlacePage -->
        <test-method signature="allFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:8, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:48 EEST" name="allFooterMarketPlacePage" finished-at="2023-08-16T15:28:53 EEST" duration-ms="5274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:48 EEST" name="setUp" finished-at="2023-08-16T15:28:48 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:53 EEST" name="setUp" finished-at="2023-08-16T15:28:53 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:9, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:53 EEST" name="partnFooterMarketPlacePage" finished-at="2023-08-16T15:28:58 EEST" duration-ms="5109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:58 EEST" name="setUp" finished-at="2023-08-16T15:28:58 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:10, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:28:58 EEST" name="subFooterMarketPlacePage" finished-at="2023-08-16T15:29:03 EEST" duration-ms="5170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterMarketPlacePage -->
        <test-method signature="copFooterMarketPlacePage(java.lang.String,java.lang.String)[pri:11, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:29:03 EEST" name="copFooterMarketPlacePage" finished-at="2023-08-16T15:29:08 EEST" duration-ms="4172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/market-place]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterMarketPlacePage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:29:03 EEST" name="setUp" finished-at="2023-08-16T15:29:03 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.marketPlacePageTests.AllPageChromeTests@298a5e20]" started-at="2023-08-16T15:29:08 EEST" name="tearDown" finished-at="2023-08-16T15:29:08 EEST" duration-ms="652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.marketPlacePageTests.AllPageChromeTests -->
      <class name="tests.affiliateProgramPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:29 EEST" name="setUp" finished-at="2023-08-16T15:36:31 EEST" duration-ms="2320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:1, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:31 EEST" name="allHeaderAffiliateProgramPage" finished-at="2023-08-16T15:36:38 EEST" duration-ms="6431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderAffiliateProgramPage -->
        <test-method signature="getStartedHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:2, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:38 EEST" name="getStartedHeaderAffiliateProgramPage" finished-at="2023-08-16T15:36:42 EEST" duration-ms="4087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:38 EEST" name="setUp" finished-at="2023-08-16T15:36:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:42 EEST" name="setUp" finished-at="2023-08-16T15:36:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:3, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:42 EEST" name="learnHeaderAffiliateProgramPage" finished-at="2023-08-16T15:36:46 EEST" duration-ms="4078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:46 EEST" name="setUp" finished-at="2023-08-16T15:36:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:4, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:46 EEST" name="resourcesHeaderAffiliateProgramPage" finished-at="2023-08-16T15:36:50 EEST" duration-ms="4162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderAffiliateProgramPage -->
        <test-method signature="mainSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:6, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:50 EEST" name="mainSectionAffiliateProgramPage" finished-at="2023-08-16T15:36:56 EEST" duration-ms="5895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:50 EEST" name="setUp" finished-at="2023-08-16T15:36:50 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="affiliateSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:7, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:56 EEST" name="affiliateSectionAffiliateProgramPage" finished-at="2023-08-16T15:37:01 EEST" duration-ms="5242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- affiliateSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:36:56 EEST" name="setUp" finished-at="2023-08-16T15:36:56 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:8, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:01 EEST" name="allFooterAffiliateProgramPage" finished-at="2023-08-16T15:37:06 EEST" duration-ms="4980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:01 EEST" name="setUp" finished-at="2023-08-16T15:37:01 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:9, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:06 EEST" name="partnFooterAffiliateProgramPage" finished-at="2023-08-16T15:37:11 EEST" duration-ms="4866" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:06 EEST" name="setUp" finished-at="2023-08-16T15:37:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:11 EEST" name="setUp" finished-at="2023-08-16T15:37:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:10, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:11 EEST" name="subFooterAffiliateProgramPage" finished-at="2023-08-16T15:37:16 EEST" duration-ms="4952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:16 EEST" name="setUp" finished-at="2023-08-16T15:37:16 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:11, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:16 EEST" name="copFooterAffiliateProgramPage" finished-at="2023-08-16T15:37:20 EEST" duration-ms="4005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.affiliateProgramPageTests.AllPageFirefoxTests@644baf4a]" started-at="2023-08-16T15:37:20 EEST" name="tearDown" finished-at="2023-08-16T15:37:22 EEST" duration-ms="1573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.affiliateProgramPageTests.AllPageFirefoxTests -->
      <class name="tests.buySellMoodCoinTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:08 EEST" name="setUp" finished-at="2023-08-16T15:29:10 EEST" duration-ms="1475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:10 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:29:15 EEST" duration-ms="5004" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allHeaderBuySellMoodCoinPage(AllPageChromeTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method retried="true" signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:15 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:29:33 EEST" duration-ms="18796" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allHeaderBuySellMoodCoinPage(AllPageChromeTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:15 EEST" name="setUp" finished-at="2023-08-16T15:29:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:33 EEST" name="setUp" finished-at="2023-08-16T15:29:33 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:1, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:33 EEST" name="allHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:29:52 EEST" duration-ms="18689" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allHeaderBuySellMoodCoinPage(AllPageChromeTests.java:26)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:52 EEST" name="setUp" finished-at="2023-08-16T15:29:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:52 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:29:56 EEST" duration-ms="3790" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.getStartedHeaderBuySellMoodCoinPage(AllPageChromeTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method retried="true" signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:56 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:00 EEST" duration-ms="3748" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.getStartedHeaderBuySellMoodCoinPage(AllPageChromeTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:29:56 EEST" name="setUp" finished-at="2023-08-16T15:29:56 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:00 EEST" name="setUp" finished-at="2023-08-16T15:30:00 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:2, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:00 EEST" name="getStartedHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:03 EEST" duration-ms="3816" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.getStartedHeaderBuySellMoodCoinPage(AllPageChromeTests.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderBuySellMoodCoinPage -->
        <test-method retried="true" signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:03 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:07 EEST" duration-ms="3798" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.learnHeaderBuySellMoodCoinPage(AllPageChromeTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:03 EEST" name="setUp" finished-at="2023-08-16T15:30:03 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:07 EEST" name="setUp" finished-at="2023-08-16T15:30:07 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:07 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:11 EEST" duration-ms="3767" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.learnHeaderBuySellMoodCoinPage(AllPageChromeTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:11 EEST" name="setUp" finished-at="2023-08-16T15:30:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:3, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:11 EEST" name="learnHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:15 EEST" duration-ms="3784" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.learnHeaderBuySellMoodCoinPage(AllPageChromeTests.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderBuySellMoodCoinPage -->
        <test-method retried="true" signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:15 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:19 EEST" duration-ms="3843" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.resourcesHeaderBuySellMoodCoinPage(AllPageChromeTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:15 EEST" name="setUp" finished-at="2023-08-16T15:30:15 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:19 EEST" name="setUp" finished-at="2023-08-16T15:30:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:19 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:22 EEST" duration-ms="3817" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.resourcesHeaderBuySellMoodCoinPage(AllPageChromeTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method signature="resourcesHeaderBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:4, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:22 EEST" name="resourcesHeaderBuySellMoodCoinPage" finished-at="2023-08-16T15:30:26 EEST" duration-ms="3784" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.resourcesHeaderBuySellMoodCoinPage(AllPageChromeTests.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:22 EEST" name="setUp" finished-at="2023-08-16T15:30:22 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:26 EEST" name="setUp" finished-at="2023-08-16T15:30:26 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:6, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:26 EEST" name="mainSectionBuySellMoodCoinPage" finished-at="2023-08-16T15:30:31 EEST" duration-ms="5184" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionBuySellMoodCoinPage -->
        <test-method retried="true" signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:31 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:30:36 EEST" duration-ms="4923" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allFooterBuySellMoodCoinPage(AllPageChromeTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:31 EEST" name="setUp" finished-at="2023-08-16T15:30:31 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:36 EEST" name="setUp" finished-at="2023-08-16T15:30:36 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:36 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:30:41 EEST" duration-ms="4969" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allFooterBuySellMoodCoinPage(AllPageChromeTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method signature="allFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:7, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:41 EEST" name="allFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:30:46 EEST" duration-ms="4888" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.allFooterBuySellMoodCoinPage(AllPageChromeTests.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:41 EEST" name="setUp" finished-at="2023-08-16T15:30:41 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:8, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:46 EEST" name="partnFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:30:51 EEST" duration-ms="5161" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:46 EEST" name="setUp" finished-at="2023-08-16T15:30:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:9, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:51 EEST" name="subFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:30:57 EEST" duration-ms="5111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:51 EEST" name="setUp" finished-at="2023-08-16T15:30:51 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:57 EEST" name="setUp" finished-at="2023-08-16T15:30:57 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:30:57 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:31:00 EEST" duration-ms="3678" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.copFooterBuySellMoodCoinPage(AllPageChromeTests.java:196)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:31:00 EEST" name="setUp" finished-at="2023-08-16T15:31:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:31:00 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:31:04 EEST" duration-ms="3683" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.copFooterBuySellMoodCoinPage(AllPageChromeTests.java:196)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method signature="copFooterBuySellMoodCoinPage(java.lang.String,java.lang.String)[pri:10, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:31:04 EEST" name="copFooterBuySellMoodCoinPage" finished-at="2023-08-16T15:31:08 EEST" duration-ms="3672" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/buy-sell-aimood-coin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.buySellMoodCoinTests.AllPageChromeTests.copFooterBuySellMoodCoinPage(AllPageChromeTests.java:196)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:262)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:62)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterBuySellMoodCoinPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:31:04 EEST" name="setUp" finished-at="2023-08-16T15:31:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.buySellMoodCoinTests.AllPageChromeTests@2a7f1f10]" started-at="2023-08-16T15:31:08 EEST" name="tearDown" finished-at="2023-08-16T15:31:08 EEST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.buySellMoodCoinTests.AllPageChromeTests -->
      <class name="tests.tokenMoodPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:33:53 EEST" name="setUp" finished-at="2023-08-16T15:33:55 EEST" duration-ms="1572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:33:55 EEST" name="allHeaderTokenMoodPage" finished-at="2023-08-16T15:34:01 EEST" duration-ms="5933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:01 EEST" name="setUp" finished-at="2023-08-16T15:34:01 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:01 EEST" name="getStartedHeaderTokenMoodPage" finished-at="2023-08-16T15:34:05 EEST" duration-ms="4460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:05 EEST" name="setUp" finished-at="2023-08-16T15:34:05 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:05 EEST" name="learnHeaderTokenMoodPage" finished-at="2023-08-16T15:34:10 EEST" duration-ms="4492" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:10 EEST" name="setUp" finished-at="2023-08-16T15:34:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:10 EEST" name="resourcesHeaderTokenMoodPage" finished-at="2023-08-16T15:34:14 EEST" duration-ms="4337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderTokenMoodPage -->
        <test-method signature="mainSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:14 EEST" name="mainSectionTokenMoodPage" finished-at="2023-08-16T15:34:19 EEST" duration-ms="5198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:14 EEST" name="setUp" finished-at="2023-08-16T15:34:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method retried="true" signature="statisticsSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:19 EEST" name="statisticsSectionTokenMoodPage" finished-at="2023-08-16T15:34:25 EEST" duration-ms="5489" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.tokenMoodPageTests.AllPageChromeTests.statisticsSectionTokenMoodPage(AllPageChromeTests.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:19 EEST" name="setUp" finished-at="2023-08-16T15:34:19 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:25 EEST" name="setUp" finished-at="2023-08-16T15:34:25 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:25 EEST" name="statisticsSectionTokenMoodPage" finished-at="2023-08-16T15:34:37 EEST" duration-ms="12056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionTokenMoodPage -->
        <test-method signature="allFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:37 EEST" name="allFooterTokenMoodPage" finished-at="2023-08-16T15:34:42 EEST" duration-ms="5296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:37 EEST" name="setUp" finished-at="2023-08-16T15:34:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:42 EEST" name="setUp" finished-at="2023-08-16T15:34:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:9, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:42 EEST" name="partnFooterTokenMoodPage" finished-at="2023-08-16T15:34:47 EEST" duration-ms="5138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:47 EEST" name="setUp" finished-at="2023-08-16T15:34:47 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:10, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:47 EEST" name="subFooterTokenMoodPage" finished-at="2023-08-16T15:34:52 EEST" duration-ms="5138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:52 EEST" name="setUp" finished-at="2023-08-16T15:34:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:11, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:52 EEST" name="copFooterTokenMoodPage" finished-at="2023-08-16T15:34:56 EEST" duration-ms="4183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterTokenMoodPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.tokenMoodPageTests.AllPageChromeTests@740cae06]" started-at="2023-08-16T15:34:56 EEST" name="tearDown" finished-at="2023-08-16T15:34:57 EEST" duration-ms="651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.tokenMoodPageTests.AllPageChromeTests -->
      <class name="tests.fundPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:43 EEST" name="setUp" finished-at="2023-08-16T15:35:45 EEST" duration-ms="1852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderFundPage(java.lang.String,java.lang.String)[pri:1, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:45 EEST" name="allHeaderFundPage" finished-at="2023-08-16T15:35:51 EEST" duration-ms="5778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderFundPage -->
        <test-method signature="getStartedHeaderFundPage(java.lang.String,java.lang.String)[pri:2, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:51 EEST" name="getStartedHeaderFundPage" finished-at="2023-08-16T15:35:55 EEST" duration-ms="4451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:51 EEST" name="setUp" finished-at="2023-08-16T15:35:51 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderFundPage(java.lang.String,java.lang.String)[pri:3, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:55 EEST" name="learnHeaderFundPage" finished-at="2023-08-16T15:35:59 EEST" duration-ms="4292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:55 EEST" name="setUp" finished-at="2023-08-16T15:35:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:59 EEST" name="setUp" finished-at="2023-08-16T15:35:59 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderFundPage(java.lang.String,java.lang.String)[pri:4, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:35:59 EEST" name="resourcesHeaderFundPage" finished-at="2023-08-16T15:36:04 EEST" duration-ms="4324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:04 EEST" name="setUp" finished-at="2023-08-16T15:36:04 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionFundPage(java.lang.String,java.lang.String)[pri:6, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:04 EEST" name="mainSectionFundPage" finished-at="2023-08-16T15:36:09 EEST" duration-ms="5171" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:09 EEST" name="setUp" finished-at="2023-08-16T15:36:09 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterFundPage(java.lang.String,java.lang.String)[pri:7, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:09 EEST" name="allFooterFundPage" finished-at="2023-08-16T15:36:14 EEST" duration-ms="5234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:14 EEST" name="setUp" finished-at="2023-08-16T15:36:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterFundPage(java.lang.String,java.lang.String)[pri:8, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:14 EEST" name="partnFooterFundPage" finished-at="2023-08-16T15:36:19 EEST" duration-ms="5138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:19 EEST" name="setUp" finished-at="2023-08-16T15:36:19 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterFundPage(java.lang.String,java.lang.String)[pri:9, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:19 EEST" name="subFooterFundPage" finished-at="2023-08-16T15:36:24 EEST" duration-ms="5095" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterFundPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:24 EEST" name="setUp" finished-at="2023-08-16T15:36:24 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterFundPage(java.lang.String,java.lang.String)[pri:10, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:24 EEST" name="copFooterFundPage" finished-at="2023-08-16T15:36:28 EEST" duration-ms="4165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/fund]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterFundPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.fundPageTests.AllPageChromeTests@f78a47e]" started-at="2023-08-16T15:36:28 EEST" name="tearDown" finished-at="2023-08-16T15:36:29 EEST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.fundPageTests.AllPageChromeTests -->
      <class name="tests.affiliateProgramPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:22 EEST" name="setUp" finished-at="2023-08-16T15:37:23 EEST" duration-ms="1554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:1, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:23 EEST" name="allHeaderAffiliateProgramPage" finished-at="2023-08-16T15:37:33 EEST" duration-ms="9846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:33 EEST" name="setUp" finished-at="2023-08-16T15:37:33 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:2, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:33 EEST" name="getStartedHeaderAffiliateProgramPage" finished-at="2023-08-16T15:37:38 EEST" duration-ms="4440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:38 EEST" name="setUp" finished-at="2023-08-16T15:37:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:3, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:38 EEST" name="learnHeaderAffiliateProgramPage" finished-at="2023-08-16T15:37:42 EEST" duration-ms="4287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:42 EEST" name="setUp" finished-at="2023-08-16T15:37:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderAffiliateProgramPage(java.lang.String,java.lang.String)[pri:4, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:42 EEST" name="resourcesHeaderAffiliateProgramPage" finished-at="2023-08-16T15:37:46 EEST" duration-ms="4364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:46 EEST" name="setUp" finished-at="2023-08-16T15:37:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:6, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:46 EEST" name="mainSectionAffiliateProgramPage" finished-at="2023-08-16T15:37:52 EEST" duration-ms="6239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:52 EEST" name="setUp" finished-at="2023-08-16T15:37:52 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="affiliateSectionAffiliateProgramPage(java.lang.String,java.lang.String)[pri:7, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:52 EEST" name="affiliateSectionAffiliateProgramPage" finished-at="2023-08-16T15:37:58 EEST" duration-ms="5615" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- affiliateSectionAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:58 EEST" name="setUp" finished-at="2023-08-16T15:37:58 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:8, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:37:58 EEST" name="allFooterAffiliateProgramPage" finished-at="2023-08-16T15:38:03 EEST" duration-ms="5254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterAffiliateProgramPage -->
        <test-method signature="partnFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:9, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:03 EEST" name="partnFooterAffiliateProgramPage" finished-at="2023-08-16T15:38:08 EEST" duration-ms="5160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:03 EEST" name="setUp" finished-at="2023-08-16T15:38:03 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:08 EEST" name="setUp" finished-at="2023-08-16T15:38:08 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:10, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:08 EEST" name="subFooterAffiliateProgramPage" finished-at="2023-08-16T15:38:14 EEST" duration-ms="5121" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:14 EEST" name="setUp" finished-at="2023-08-16T15:38:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterAffiliateProgramPage(java.lang.String,java.lang.String)[pri:11, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:14 EEST" name="copFooterAffiliateProgramPage" finished-at="2023-08-16T15:38:18 EEST" duration-ms="4159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/affiliate-program]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterAffiliateProgramPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.affiliateProgramPageTests.AllPageChromeTests@7526515b]" started-at="2023-08-16T15:38:18 EEST" name="tearDown" finished-at="2023-08-16T15:38:18 EEST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.affiliateProgramPageTests.AllPageChromeTests -->
      <class name="tests.tokenMoodPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:32:59 EEST" name="setUp" finished-at="2023-08-16T15:33:01 EEST" duration-ms="2434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:1, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:01 EEST" name="allHeaderTokenMoodPage" finished-at="2023-08-16T15:33:10 EEST" duration-ms="8863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:10 EEST" name="setUp" finished-at="2023-08-16T15:33:10 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:2, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:10 EEST" name="getStartedHeaderTokenMoodPage" finished-at="2023-08-16T15:33:14 EEST" duration-ms="4068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderTokenMoodPage -->
        <test-method signature="learnHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:3, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:14 EEST" name="learnHeaderTokenMoodPage" finished-at="2023-08-16T15:33:18 EEST" duration-ms="4109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:14 EEST" name="setUp" finished-at="2023-08-16T15:33:14 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:18 EEST" name="setUp" finished-at="2023-08-16T15:33:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderTokenMoodPage(java.lang.String,java.lang.String)[pri:4, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:18 EEST" name="resourcesHeaderTokenMoodPage" finished-at="2023-08-16T15:33:23 EEST" duration-ms="4158" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderTokenMoodPage -->
        <test-method signature="mainSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:6, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:23 EEST" name="mainSectionTokenMoodPage" finished-at="2023-08-16T15:33:28 EEST" duration-ms="4935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:23 EEST" name="setUp" finished-at="2023-08-16T15:33:23 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionTokenMoodPage(java.lang.String,java.lang.String)[pri:7, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:28 EEST" name="statisticsSectionTokenMoodPage" finished-at="2023-08-16T15:33:33 EEST" duration-ms="5293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:28 EEST" name="setUp" finished-at="2023-08-16T15:33:28 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:8, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:33 EEST" name="allFooterTokenMoodPage" finished-at="2023-08-16T15:33:38 EEST" duration-ms="4978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:33 EEST" name="setUp" finished-at="2023-08-16T15:33:33 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:9, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:38 EEST" name="partnFooterTokenMoodPage" finished-at="2023-08-16T15:33:43 EEST" duration-ms="4831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:38 EEST" name="setUp" finished-at="2023-08-16T15:33:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:43 EEST" name="setUp" finished-at="2023-08-16T15:33:43 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:10, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:43 EEST" name="subFooterTokenMoodPage" finished-at="2023-08-16T15:33:48 EEST" duration-ms="4937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterTokenMoodPage -->
        <test-method signature="copFooterTokenMoodPage(java.lang.String,java.lang.String)[pri:11, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:48 EEST" name="copFooterTokenMoodPage" finished-at="2023-08-16T15:33:52 EEST" duration-ms="3960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en/block-explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterTokenMoodPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:48 EEST" name="setUp" finished-at="2023-08-16T15:33:48 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.tokenMoodPageTests.AllPageFirefoxTests@f0c8a99]" started-at="2023-08-16T15:33:52 EEST" name="tearDown" finished-at="2023-08-16T15:33:53 EEST" duration-ms="1586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.tokenMoodPageTests.AllPageFirefoxTests -->
      <class name="tests.mainPageTests.AllPageFirefoxTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:09 EEST" name="setUp" finished-at="2023-08-16T15:24:14 EEST" duration-ms="4094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMainPage(java.lang.String,java.lang.String)[pri:1, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:14 EEST" name="allHeaderMainPage" finished-at="2023-08-16T15:24:42 EEST" duration-ms="28578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:42 EEST" name="setUp" finished-at="2023-08-16T15:24:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getStartedHeaderMainPage(java.lang.String,java.lang.String)[pri:2, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:42 EEST" name="getStartedHeaderMainPage" finished-at="2023-08-16T15:24:46 EEST" duration-ms="4284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:46 EEST" name="setUp" finished-at="2023-08-16T15:24:46 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMainPage(java.lang.String,java.lang.String)[pri:3, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:46 EEST" name="learnHeaderMainPage" finished-at="2023-08-16T15:24:51 EEST" duration-ms="4288" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMainPage -->
        <test-method signature="resourcesHeaderMainPage(java.lang.String,java.lang.String)[pri:4, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:51 EEST" name="resourcesHeaderMainPage" finished-at="2023-08-16T15:24:55 EEST" duration-ms="4323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:51 EEST" name="setUp" finished-at="2023-08-16T15:24:51 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMainPage(java.lang.String,java.lang.String)[pri:6, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:55 EEST" name="mainSectionMainPage" finished-at="2023-08-16T15:25:00 EEST" duration-ms="5141" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:24:55 EEST" name="setUp" finished-at="2023-08-16T15:24:55 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:00 EEST" name="setUp" finished-at="2023-08-16T15:25:00 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="videoSectionMainPage(java.lang.String,java.lang.String)[pri:7, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:00 EEST" name="videoSectionMainPage" finished-at="2023-08-16T15:25:06 EEST" duration-ms="5403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- videoSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:06 EEST" name="setUp" finished-at="2023-08-16T15:25:06 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="roadmapSectionMainPage(java.lang.String,java.lang.String)[pri:8, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:06 EEST" name="roadmapSectionMainPage" finished-at="2023-08-16T15:25:11 EEST" duration-ms="5315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roadmapSectionMainPage -->
        <test-method retried="true" signature="statisticsSectionMainPage(java.lang.String,java.lang.String)[pri:9, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:11 EEST" name="statisticsSectionMainPage" finished-at="2023-08-16T15:25:16 EEST" duration-ms="5357" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[*** Images are not similar *** expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: *** Images are not similar *** expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at pages.pixel_perfect.PixelPerfectAssert.byElement(PixelPerfectAssert.java:109)
at tests.mainPageTests.AllPageFirefoxTests.statisticsSectionMainPage(AllPageFirefoxTests.java:175)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1380)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:11 EEST" name="setUp" finished-at="2023-08-16T15:25:11 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMainPage(java.lang.String,java.lang.String)[pri:9, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:16 EEST" name="statisticsSectionMainPage" finished-at="2023-08-16T15:25:22 EEST" duration-ms="5300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:16 EEST" name="setUp" finished-at="2023-08-16T15:25:16 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:22 EEST" name="setUp" finished-at="2023-08-16T15:25:22 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="leaningSectionMainPage(java.lang.String,java.lang.String)[pri:10, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:22 EEST" name="leaningSectionMainPage" finished-at="2023-08-16T15:25:27 EEST" duration-ms="5387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leaningSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:27 EEST" name="setUp" finished-at="2023-08-16T15:25:27 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMainPage(java.lang.String,java.lang.String)[pri:11, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:27 EEST" name="allFooterMainPage" finished-at="2023-08-16T15:25:32 EEST" duration-ms="5046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:32 EEST" name="setUp" finished-at="2023-08-16T15:25:32 EEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="partnFooterMainPage(java.lang.String,java.lang.String)[pri:12, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:32 EEST" name="partnFooterMainPage" finished-at="2023-08-16T15:25:37 EEST" duration-ms="4955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:37 EEST" name="setUp" finished-at="2023-08-16T15:25:37 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterMainPage(java.lang.String,java.lang.String)[pri:13, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:37 EEST" name="subFooterMainPage" finished-at="2023-08-16T15:25:42 EEST" duration-ms="5178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterMainPage -->
        <test-method signature="copFooterMainPage(java.lang.String,java.lang.String)[pri:14, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:42 EEST" name="copFooterMainPage" finished-at="2023-08-16T15:25:46 EEST" duration-ms="4094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:42 EEST" name="setUp" finished-at="2023-08-16T15:25:42 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.mainPageTests.AllPageFirefoxTests@242b836]" started-at="2023-08-16T15:25:46 EEST" name="tearDown" finished-at="2023-08-16T15:25:48 EEST" duration-ms="1604" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.mainPageTests.AllPageFirefoxTests -->
      <class name="tests.mainPageTests.AllPageChromeTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:25:48 EEST" name="setUp" finished-at="2023-08-16T15:25:50 EEST" duration-ms="1836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allHeaderMainPage(java.lang.String,java.lang.String)[pri:1, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:25:50 EEST" name="allHeaderMainPage" finished-at="2023-08-16T15:26:13 EEST" duration-ms="23504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allHeaderMainPage -->
        <test-method signature="getStartedHeaderMainPage(java.lang.String,java.lang.String)[pri:2, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:13 EEST" name="getStartedHeaderMainPage" finished-at="2023-08-16T15:26:18 EEST" duration-ms="4474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStartedHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:13 EEST" name="setUp" finished-at="2023-08-16T15:26:13 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="learnHeaderMainPage(java.lang.String,java.lang.String)[pri:3, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:18 EEST" name="learnHeaderMainPage" finished-at="2023-08-16T15:26:22 EEST" duration-ms="4434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- learnHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:18 EEST" name="setUp" finished-at="2023-08-16T15:26:18 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="resourcesHeaderMainPage(java.lang.String,java.lang.String)[pri:4, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:22 EEST" name="resourcesHeaderMainPage" finished-at="2023-08-16T15:26:26 EEST" duration-ms="4413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourcesHeaderMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:22 EEST" name="setUp" finished-at="2023-08-16T15:26:22 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:26 EEST" name="setUp" finished-at="2023-08-16T15:26:26 EEST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="mainSectionMainPage(java.lang.String,java.lang.String)[pri:6, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:26 EEST" name="mainSectionMainPage" finished-at="2023-08-16T15:26:32 EEST" duration-ms="5573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mainSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:32 EEST" name="setUp" finished-at="2023-08-16T15:26:32 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="videoSectionMainPage(java.lang.String,java.lang.String)[pri:7, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:32 EEST" name="videoSectionMainPage" finished-at="2023-08-16T15:26:38 EEST" duration-ms="5771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- videoSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:38 EEST" name="setUp" finished-at="2023-08-16T15:26:38 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="roadmapSectionMainPage(java.lang.String,java.lang.String)[pri:8, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:38 EEST" name="roadmapSectionMainPage" finished-at="2023-08-16T15:26:44 EEST" duration-ms="5791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- roadmapSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:44 EEST" name="setUp" finished-at="2023-08-16T15:26:44 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="statisticsSectionMainPage(java.lang.String,java.lang.String)[pri:9, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:44 EEST" name="statisticsSectionMainPage" finished-at="2023-08-16T15:26:49 EEST" duration-ms="5808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- statisticsSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:49 EEST" name="setUp" finished-at="2023-08-16T15:26:49 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="leaningSectionMainPage(java.lang.String,java.lang.String)[pri:10, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:49 EEST" name="leaningSectionMainPage" finished-at="2023-08-16T15:26:56 EEST" duration-ms="6342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leaningSectionMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:56 EEST" name="setUp" finished-at="2023-08-16T15:26:56 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="allFooterMainPage(java.lang.String,java.lang.String)[pri:11, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:26:56 EEST" name="allFooterMainPage" finished-at="2023-08-16T15:27:01 EEST" duration-ms="5491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allFooterMainPage -->
        <test-method signature="partnFooterMainPage(java.lang.String,java.lang.String)[pri:12, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:01 EEST" name="partnFooterMainPage" finished-at="2023-08-16T15:27:06 EEST" duration-ms="5165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- partnFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:01 EEST" name="setUp" finished-at="2023-08-16T15:27:01 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="subFooterMainPage(java.lang.String,java.lang.String)[pri:13, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:06 EEST" name="subFooterMainPage" finished-at="2023-08-16T15:27:12 EEST" duration-ms="5180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- subFooterMainPage -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:06 EEST" name="setUp" finished-at="2023-08-16T15:27:06 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:12 EEST" name="setUp" finished-at="2023-08-16T15:27:12 EEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="copFooterMainPage(java.lang.String,java.lang.String)[pri:14, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:12 EEST" name="copFooterMainPage" finished-at="2023-08-16T15:27:16 EEST" duration-ms="4262" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://ai-mood.com/en]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Screenshots/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copFooterMainPage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.mainPageTests.AllPageChromeTests@2e385cce]" started-at="2023-08-16T15:27:16 EEST" name="tearDown" finished-at="2023-08-16T15:27:17 EEST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.mainPageTests.AllPageChromeTests -->
    </test> <!-- ai-mood - Pixel perfect regression -->
  </suite> <!-- WPT -->
</testng-results>
